var width;var height;var params={};var pay_type=2;var resource_type;var cos=new InitCosCloud;var SID;var Poffset;var files=[];var transcodeNotifyUrl;var secretId;var fileId;var videoGsize;var is_edit=false;$(document).ready(function(){initUpload()});function getParameterByName(e,i){if(!i)i=window.location.href;e=e.replace(/[\[\]]/g,"\\$&");var t=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)"),o=t.exec(i);if(!o)return null;if(!o[2])return"";return decodeURIComponent(o[2].replace(/\+/g," "))}function getObjectURL(e){var i=null;if(window.createObjectURL!=undefined){i=window.createObjectURL(e)}else if(window.URL!=undefined){i=window.URL.createObjectURL(e)}else if(window.webkitURL!=undefined){i=window.webkitURL.createObjectURL(e)}return i}function initUpload(){var e=qcVideo.get("$");var i=qcVideo.get("Version");if(!qcVideo.uploader.supportBrowser()){if(i.IS_MOBILE){baseUtils.show.redTip("当前浏览器不支持上传，请升级系统版本或者下载最新的chrome浏览器")}else{getInternetExplorerVersion()}return}var t=1;var o=0;accountDone("video_file",t,o,"")}var accountDone=function(e,i,t,o){var a=qcVideo.get("$"),d=qcVideo.get("ErrorCode"),s=qcVideo.get("Log"),r=qcVideo.get("JSON"),l=qcVideo.get("util"),n=qcVideo.get("Code"),c=qcVideo.get("Version");qcVideo.uploader.init({web_upload_url:"https://vod.qcloud.com/v2/index.php",secretId:secretId,getSignature:function(e,i){a.ajax({dataType:"json",url:"/getsig?args="+encodeURIComponent(e),success:function(e){i(e["result"])}})},upBtnId:e,isTranscode:i,isWatermark:t,after_sha_start_upload:true,sha1js_path:"/calculator_worker_sha1.js",disable_multi_selection:false,transcodeNotifyUrl:transcodeNotifyUrl,classId:o,filters:{max_file_size:"2gb",mime_types:["MP4"],video_only:true},forceH5Worker:true},{onFileUpdate:function(e){console.log(transcodeNotifyUrl);a("#videoName").hide();a(".videoUploadCancle").data("videoid",e.id);a(".videoUploadBox").fadeIn(300);is_edit=true;var i=e.size;videoGsize=i/(1024*1024);if(videoGsize>1e3){setTimeout(function(){alert("请将视频文件压缩到 1G 以内!")},100);a(".videoUploadCancle").click();return}if(e.code==1){if(files.length==1){if(files[0]!=undefined){var t=files[0].id;qcVideo.uploader.deleteFile(t);deleteFromFile(t);a("#"+t).remove();console.log("删除了一个文件:"+t)}}var o=a("#"+e.id);if(!o.get(0)){a("#progress_show").append("<div class='progress_div' id = '"+e.id+"'><span style='font-size: 12px'>"+e.name+":</span><div class='progress_bar' id = 'progress_bar_"+e.id+"'><div class='bar' id='bar_"+e.id+"'></div></div><span class='upload_finish' id='upload_finish_"+e.id+"'>上传完成</span><span data-act='del' data-type='0' class='delete'>删除</span></div>")}var d={id:e.id,size:e.size,state:0,file_id:"",size_text:e.size_text,type:1};files[files.length]=d;a(".videoBoxTitle").text(e.name);a(".videoSize").text(e.size_text);a(".uploadRatio span:nth-of-type(2)").text(e.size_text);a(".videoPercent").text("视频正在解析中");a(".uploadRatio span").text("");a(".videoUploadLineA").css("width","0%");console.log("添加了一个新的文件:"+"id:"+e.id+"size:"+e.size)}if(e.code==2){files[0]["state"]=2}if(e.code==5&&e.percent>0){var s=parseFloat(e.size_text)*parseFloat(e.percent/100);s=s.toFixed(2);a(".videoUploadLineA").css("width",e.percent+"%");a(".videoPercent").text(e.percent+"%");a(".uploadRatio span:nth-of-type(1)").text(s);a(".uploadRatio span:nth-of-type(2)").text(e.size_text);if(!e.speed){a(".uploadSpeed span").text("");a(".videoTimeLeft span").text("")}else{a(".uploadSpeed span").text(e.speed)}}if(e.code==6){is_edit=false;var s=e.size_text*e.percent;a(".videoUploadLineA").css("width","100%");a(".videoPercent").text("已完成");a(".uploadRatio span:nth-of-type(1)").text(e.size_text);a(".uploadRatio span:nth-of-type(2)").text(e.size_text);fileId=e.serverFileId;VideoName=e.name;for(var r=0;r<files.length;r++){if(e.id==files[r]["id"]){files[r]["state"]=6;files[r]["file_id"]=e.serverFileId;break}}if(isUploadFinish()){var l=generateParams()}}console.log(e)},onFileStatus:function(e){console.log("各状态总数--\x3e"+r.stringify(e))},onFilterError:function(e){var i="message:"+e.message+(e.solution?";solution=="+e.solution:"");if(e.code==-1){baseUtils.show.redTip("请上传正确格式的文件")}}});a(".videoUploadCancle").click(function(){a(".videoUploadBox").fadeOut(300);s.debug("delete",fileId);qcVideo.uploader.deleteFile(fileId);deleteFromFile(fileId);fileId=null})};function deleteFromFile(e){for(var i=0;i<files.length;i++){var t=files[i];if(e==t["id"]){files.splice(i,1);console.log("从files中删除了一个文件:"+e)}}}function isUploadFinish(){var e=true;for(var i=0;i<files.length;i++){if(files[i]["state"]!=6){e=false}}return e}function generateParams(){var e={};if(files.length==1){e={public_video:files[0]["file_id"],public_size_text:files[0]["size"]/(1024*1024)}}return e}var try_count=0;function videoUpload(){if(try_count>=300){hideLoading();baseUtils.show.redTip("视频解析失败,请更新浏览器版本重新上传");return}setTimeout(function(){if(files.length>0&&files[0]["state"]==2){console.log("解析完成");qcVideo.uploader.startUpload()}else{try_count++;console.log("解析还未完成");videoUpload()}},1e3)}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
