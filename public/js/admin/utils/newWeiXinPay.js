var $weiXinPay={TYPE_ACCOUNT_CHARGE:1,TYPE_GROW_UP_VERSION:2,TYPE_VIP_VERSION:3,currentTime:0,maxTime:60*5,repeatQuery:-1,createQR:function(e){var n=new QRCode(document.getElementById("qr_code"),{text:e,width:150,height:150,colorDark:"#000000",colorLight:"#ffffff",correctLevel:QRCode.CorrectLevel.H})},queryPayResult:function(e){$weiXinPay.currentTime+=1;if($weiXinPay.currentTime>=$weiXinPay.maxTime){clearInterval($weiXinPay.repeatQuery);$("#mainContent").hide();$(".refreshWindow").fadeIn(300)}$.post("/getPayResult",{order_id:e},function(e){if(e.code==0){clearInterval($weiXinPay.repeatQuery);$("#mainContent").hide();$(".successWindow").fadeIn(300);var n=3;var i=setInterval(function(){console.log(n);n--;if(n>=0){$("#paymentSuccessReturn span").text(n)}else{clearInterval(i);if($weiXinPay.GetQueryString("first")!=1){window.location.href="/accountview"}else{var e=window.location.href;if(/openNewGrowUp/.test(e)){if($weiXinPay.GetQueryString("first_login")==1){window.location.href="/accountview?first=1&type=1&first_login=1"}else{window.location.href="/accountview?first=1&type=1"}}else if(/openNewVip/.test(e)){if($weiXinPay.GetQueryString("first_login")==1){window.location.href="/accountview?first=1&type=2&first_login=1"}else{window.location.href="/accountview?first=1&type=2"}}}}},1e3)}else if(e.code==1){console.log(e.msg);clearInterval($weiXinPay.repeatQuery);$("#mainContent").hide();$(".failureWindow").fadeIn(300)}else{console.log(e.msg)}})},GetQueryString:function(e){var n=new RegExp("(^|&)"+e+"=([^&]*)(&|$)");var i=window.location.search.substr(1).match(n);if(i!=null)return decodeURIComponent(i[2]);return null},closeCurrentWindow:function(){self.opener=null;var e=self.close();console.log(e);if(e==undefined){window.location.href="/accountview"}}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluL3V0aWxzL25ld1dlaVhpblBheS5qcyJdLCJuYW1lcyI6WyIkd2VpWGluUGF5IiwiVFlQRV9BQ0NPVU5UX0NIQVJHRSIsIlRZUEVfR1JPV19VUF9WRVJTSU9OIiwiVFlQRV9WSVBfVkVSU0lPTiIsImN1cnJlbnRUaW1lIiwibWF4VGltZSIsInJlcGVhdFF1ZXJ5IiwiY3JlYXRlUVIiLCJjb2RlVXJsIiwicXJDb2RlIiwiUVJDb2RlIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInRleHQiLCJ3aWR0aCIsImhlaWdodCIsImNvbG9yRGFyayIsImNvbG9yTGlnaHQiLCJjb3JyZWN0TGV2ZWwiLCJDb3JyZWN0TGV2ZWwiLCJIIiwicXVlcnlQYXlSZXN1bHQiLCJvcmRlcklkIiwiY2xlYXJJbnRlcnZhbCIsIiQiLCJoaWRlIiwiZmFkZUluIiwicG9zdCIsIm9yZGVyX2lkIiwicmVzdWx0IiwiY29kZSIsImNvdW50ZG93biIsImNoYXJnZVRpbWVyIiwic2V0SW50ZXJ2YWwiLCJjb25zb2xlIiwibG9nIiwiR2V0UXVlcnlTdHJpbmciLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJ0ZXN0IiwibXNnIiwibmFtZSIsInJlZyIsIlJlZ0V4cCIsInIiLCJzZWFyY2giLCJzdWJzdHIiLCJtYXRjaCIsImRlY29kZVVSSUNvbXBvbmVudCIsImNsb3NlQ3VycmVudFdpbmRvdyIsInNlbGYiLCJvcGVuZXIiLCJjbG9zZSIsInVuZGVmaW5lZCJdLCJtYXBwaW5ncyI6IkFBS0EsR0FBSUEsYUFHQUMsb0JBQXFCLEVBQ3JCQyxxQkFBc0IsRUFDdEJDLGlCQUFrQixFQUVsQkMsWUFBYSxFQUNiQyxRQUFTLEdBQUssRUFHZEMsYUFBYyxFQUdkQyxTQUFVLFNBQVNDLEdBRWYsR0FBSUMsR0FBUyxHQUFJQyxRQUFPQyxTQUFTQyxlQUFlLFlBQzVDQyxLQUFNTCxFQUNOTSxNQUFPLElBQ1BDLE9BQVEsSUFDUkMsVUFBVyxVQUNYQyxXQUFZLFVBQ1pDLGFBQWNSLE9BQU9TLGFBQWFDLEtBSzFDQyxlQUFnQixTQUFTQyxHQUVyQnRCLFdBQVdJLGFBQWUsQ0FFMUIsSUFBSUosV0FBV0ksYUFBZUosV0FBV0ssUUFBUyxDQUM5Q2tCLGNBQWN2QixXQUFXTSxZQUN6QmtCLEdBQUUsZ0JBQWdCQyxNQUNsQkQsR0FBRSxrQkFBa0JFLE9BQU8sS0FHL0JGLEVBQUVHLEtBQUssaUJBQWtCQyxTQUFZTixHQUFXLFNBQVNPLEdBRXJELEdBQUlBLEVBQU9DLE1BQVEsRUFBRyxDQUNsQlAsY0FBY3ZCLFdBQVdNLFlBQ3pCa0IsR0FBRSxnQkFBZ0JDLE1BQ2xCRCxHQUFFLGtCQUFrQkUsT0FBTyxJQUMzQixJQUFJSyxHQUFZLENBQ2hCLElBQUlDLEdBQWNDLFlBQVksV0FDMUJDLFFBQVFDLElBQUlKLEVBQ1pBLElBQ0EsSUFBSUEsR0FBYSxFQUFHLENBQ2hCUCxFQUFFLDhCQUE4QlgsS0FBS2tCLE9BRWxDLENBQ0hSLGNBQWNTLEVBRWQsSUFBR2hDLFdBQVdvQyxlQUFlLFVBQVUsRUFBRSxDQUNyQ0MsT0FBT0MsU0FBU0MsS0FBTyxtQkFDdEIsQ0FDRCxHQUFJQSxHQUFPRixPQUFPQyxTQUFTQyxJQUMzQixJQUFHLGdCQUFnQkMsS0FBS0QsR0FBTSxDQUMxQixHQUFHdkMsV0FBV29DLGVBQWUsZ0JBQWdCLEVBQUUsQ0FDM0NDLE9BQU9DLFNBQVNDLEtBQU8sZ0RBQ3JCLENBQ0ZGLE9BQU9DLFNBQVNDLEtBQU8sbUNBRXpCLElBQUcsYUFBYUMsS0FBS0QsR0FBTSxDQUM3QixHQUFHdkMsV0FBV29DLGVBQWUsZ0JBQWdCLEVBQUUsQ0FDM0NDLE9BQU9DLFNBQVNDLEtBQU8sZ0RBQ3JCLENBQ0ZGLE9BQU9DLFNBQVNDLEtBQU8sbUNBS3hDLFNBRUEsSUFBSVYsRUFBT0MsTUFBUSxFQUFHLENBQ3pCSSxRQUFRQyxJQUFJTixFQUFPWSxJQUNuQmxCLGVBQWN2QixXQUFXTSxZQUN6QmtCLEdBQUUsZ0JBQWdCQyxNQUNsQkQsR0FBRSxrQkFBa0JFLE9BQU8sU0FFeEIsQ0FDSFEsUUFBUUMsSUFBSU4sRUFBT1ksU0FRL0JMLGVBQWdCLFNBQVNNLEdBQ3JCLEdBQUlDLEdBQU0sR0FBSUMsUUFBTyxRQUFVRixFQUFPLGdCQUN0QyxJQUFJRyxHQUFJUixPQUFPQyxTQUFTUSxPQUFPQyxPQUFPLEdBQUdDLE1BQU1MLEVBQy9DLElBQUlFLEdBQUssS0FBSyxNQUFPSSxvQkFBbUJKLEVBQUUsR0FDMUMsT0FBTyxPQUdYSyxtQkFBb0IsV0FDaEJDLEtBQUtDLE9BQVMsSUFDZCxJQUFJQyxHQUFRRixLQUFLRSxPQUNqQm5CLFNBQVFDLElBQUlrQixFQUNaLElBQUlBLEdBQVNDLFVBQVcsQ0FDcEJqQixPQUFPQyxTQUFTQyxLQUFPIiwiZmlsZSI6ImFkbWluL3V0aWxzL25ld1dlaVhpblBheS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IEFkbWluaXN0cmF0b3Igb24gMjAxNy81LzE4LlxyXG4gKi9cclxuXHJcblxyXG52YXIgJHdlaVhpblBheSA9IHtcclxuXHJcbiAgICAvL+W4uOmHj1xyXG4gICAgVFlQRV9BQ0NPVU5UX0NIQVJHRTogMSxcclxuICAgIFRZUEVfR1JPV19VUF9WRVJTSU9OOiAyLFxyXG4gICAgVFlQRV9WSVBfVkVSU0lPTjogMyxcclxuXHJcbiAgICBjdXJyZW50VGltZTogMCwgICAgICAgICAgICAgLy/orrDlvZXml7bpl7RcclxuICAgIG1heFRpbWU6IDYwICogNSwgICAgIC8vNeWIhumSn+i2heaXtumXtOmalFxyXG5cclxuICAgIC8v6YeN5aSN5p+l6K+i5Ye95pWw5a+56LGhXHJcbiAgICByZXBlYXRRdWVyeTogLTEsXHJcblxyXG4gICAgLy/nlJ/miJDkuoznu7TnoIFcclxuICAgIGNyZWF0ZVFSOiBmdW5jdGlvbihjb2RlVXJsKSB7XHJcblxyXG4gICAgICAgIHZhciBxckNvZGUgPSBuZXcgUVJDb2RlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicXJfY29kZVwiKSwge1xyXG4gICAgICAgICAgICB0ZXh0OiBjb2RlVXJsLFxyXG4gICAgICAgICAgICB3aWR0aDogMTUwLFxyXG4gICAgICAgICAgICBoZWlnaHQ6IDE1MCxcclxuICAgICAgICAgICAgY29sb3JEYXJrOiBcIiMwMDAwMDBcIixcclxuICAgICAgICAgICAgY29sb3JMaWdodDogXCIjZmZmZmZmXCIsXHJcbiAgICAgICAgICAgIGNvcnJlY3RMZXZlbDogUVJDb2RlLkNvcnJlY3RMZXZlbC5IXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG5cclxuICAgIC8v5p+l6K+i5pSv5LuY57uT5p6cXHJcbiAgICBxdWVyeVBheVJlc3VsdDogZnVuY3Rpb24ob3JkZXJJZCkge1xyXG5cclxuICAgICAgICAkd2VpWGluUGF5LmN1cnJlbnRUaW1lICs9IDE7XHJcblxyXG4gICAgICAgIGlmICgkd2VpWGluUGF5LmN1cnJlbnRUaW1lID49ICR3ZWlYaW5QYXkubWF4VGltZSkge1xyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKCR3ZWlYaW5QYXkucmVwZWF0UXVlcnkpO1xyXG4gICAgICAgICAgICAkKFwiI21haW5Db250ZW50XCIpLmhpZGUoKTtcclxuICAgICAgICAgICAgJChcIi5yZWZyZXNoV2luZG93XCIpLmZhZGVJbigzMDApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJC5wb3N0KCcvZ2V0UGF5UmVzdWx0Jywge1wib3JkZXJfaWRcIjogb3JkZXJJZCB9LCBmdW5jdGlvbihyZXN1bHQpIHtcclxuXHJcbiAgICAgICAgICAgIGlmIChyZXN1bHQuY29kZSA9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKCR3ZWlYaW5QYXkucmVwZWF0UXVlcnkpO1xyXG4gICAgICAgICAgICAgICAgJChcIiNtYWluQ29udGVudFwiKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAkKFwiLnN1Y2Nlc3NXaW5kb3dcIikuZmFkZUluKDMwMCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgY291bnRkb3duID0gMztcclxuICAgICAgICAgICAgICAgIHZhciBjaGFyZ2VUaW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGNvdW50ZG93bik7XHJcbiAgICAgICAgICAgICAgICAgICAgY291bnRkb3duLS07XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvdW50ZG93biA+PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjcGF5bWVudFN1Y2Nlc3NSZXR1cm4gc3BhblwiKS50ZXh0KGNvdW50ZG93bik7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoY2hhcmdlVGltZXIpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoJHdlaVhpblBheS5HZXRRdWVyeVN0cmluZygnZmlyc3QnKSE9MSl7ICAvL+S7juWfuuehgOeJiOWNh+e6p1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBcIi9hY2NvdW50dmlld1wiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZXsvL+esrOS4gOasoeazqOWGjOaIkOmVv+eJiOaIluS4k+S4mueJiFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKC9vcGVuTmV3R3Jvd1VwLy50ZXN0KGhyZWYpKXsvL+aIkOmVv+eJiFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKCR3ZWlYaW5QYXkuR2V0UXVlcnlTdHJpbmcoJ2ZpcnN0X2xvZ2luJyk9PTEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwiL2FjY291bnR2aWV3P2ZpcnN0PTEmdHlwZT0xJmZpcnN0X2xvZ2luPTFcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIvYWNjb3VudHZpZXc/Zmlyc3Q9MSZ0eXBlPTFcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZSBpZigvb3Blbk5ld1ZpcC8udGVzdChocmVmKSl7Ly/kuJPkuJrniYhcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZigkd2VpWGluUGF5LkdldFF1ZXJ5U3RyaW5nKCdmaXJzdF9sb2dpbicpPT0xKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBcIi9hY2NvdW50dmlldz9maXJzdD0xJnR5cGU9MiZmaXJzdF9sb2dpbj0xXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwiL2FjY291bnR2aWV3P2ZpcnN0PTEmdHlwZT0yXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSwgMTAwMCk7XHJcblxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHJlc3VsdC5jb2RlID09IDEpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdC5tc2cpO1xyXG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCgkd2VpWGluUGF5LnJlcGVhdFF1ZXJ5KTtcclxuICAgICAgICAgICAgICAgICQoXCIjbWFpbkNvbnRlbnRcIikuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5mYWlsdXJlV2luZG93XCIpLmZhZGVJbigzMDApO1xyXG5cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdC5tc2cpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH0sXHJcblxyXG4gICAgLy/ph4fnlKjmraPliJnooajovr7lvI/ojrflj5blnLDlnYDmoI/lj4LmlbDvvIhuYW1l77yJXHJcbiAgICBHZXRRdWVyeVN0cmluZzogZnVuY3Rpb24obmFtZSkge1xyXG4gICAgICAgIHZhciByZWcgPSBuZXcgUmVnRXhwKFwiKF58JilcIiArIG5hbWUgKyBcIj0oW14mXSopKCZ8JClcIik7XHJcbiAgICAgICAgdmFyIHIgPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoLnN1YnN0cigxKS5tYXRjaChyZWcpO1xyXG4gICAgICAgIGlmIChyICE9IG51bGwpcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChyWzJdKTtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH0sXHJcblxyXG4gICAgY2xvc2VDdXJyZW50V2luZG93OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5vcGVuZXIgPSBudWxsO1xyXG4gICAgICAgIHZhciBjbG9zZSA9IHNlbGYuY2xvc2UoKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhjbG9zZSk7XHJcbiAgICAgICAgaWYgKGNsb3NlID09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwiL2FjY291bnR2aWV3XCI7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcblxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdfQ==
