$(function(){var e=$("#reBackImg"),i=e.attr("src"),n=null,t={},o=new InitCosCloud;$("#save").on("click",function(){var e=$.trim($("#wx_app_name").val());if(e==""){baseUtils.show.redTip("亲,请输入公众号名称哦!");return false}t["wx_app_name_define"]=e;showLoading();d()});$("#uploadImage").on("change",function(t){var o=this.files[0];var s=o.name;var r,d;d=s.lastIndexOf(".");if(d!=-1){r=s.substr(d+1).toUpperCase();r=r.toLowerCase();if(r!="jpg"&&r!="png"&&r!="jpeg"&&r!="gif"){baseUtils.show.blueTip("请上传图片类型的文件哦~");return}}else{document.all.submit_upload.disabled=true;baseUtils.show.blueTip("请上传图片类型的文件哦~");return}if(o){i=o;n=a(o);e.prop("src",n)}});function a(e){var i=null;if(window.createObjectURL!=undefined){i=window.createObjectURL(e)}else if(window.URL!=undefined){i=window.URL.createObjectURL(e)}else if(window.webkitURL!=undefined){i=window.webkitURL.createObjectURL(e)}return i}function s(e){if(window.revokeObjectURL!=undefined){window.revokeObjectURL(e)}else if(window.URL!=undefined){window.URL.revokeObjectURL(e)}else if(window.webkitURL!=undefined){window.webkitURL.revokeObjectURL(e)}}function r(e){var i=e.split(".");return i[i.length-1]}function d(){if(n){s(n);n=null;browserMD5File(i,function(e,n){var a=get_cos_image_path()+n+"."+r(i["name"]);o.uploadFileWithoutPro(function(e){t["wx_qr_url"]=e.data.access_url;u()},function(e){baseUtils.show.redTip("上传失败!")},a,i,0)})}else{u()}}function u(){$.ajax("/updatewxaccountinfo",{type:"POST",dataType:"json",data:{params:t},success:function(e){hideLoading();if(e.code==0){baseUtils.show.blueTip(e.msg,function(){window.location.reload()})}else{baseUtils.show.redTip(e.msg)}}})}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
