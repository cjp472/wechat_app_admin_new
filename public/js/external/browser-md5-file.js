(function t(r,e,n){function f(o,u){if(!e[o]){if(!r[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var s=new Error("Cannot find module '"+o+"'");throw s.code="MODULE_NOT_FOUND",s}var h=e[o]={exports:{}};r[o][0].call(h.exports,function(t){var e=r[o][1][t];return f(e?e:t)},h,h.exports,t,r,e,n)}return e[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<n.length;o++)f(n[o]);return f})({1:[function(t,r,e){(function(t){if(typeof e==="object"){r.exports=t()}else if(typeof define==="function"&&define.amd){define(t)}else{var n;try{n=window}catch(t){n=self}n.SparkMD5=t()}})(function(t){"use strict";var r=function(t,r){return t+r&4294967295},e=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];function n(t,e,n,f,i,o){e=r(r(e,t),r(f,o));return r(e<<i|e>>>32-i,n)}function f(t,r,e,f,i,o,u){return n(r&e|~r&f,t,r,i,o,u)}function i(t,r,e,f,i,o,u){return n(r&f|e&~f,t,r,i,o,u)}function o(t,r,e,f,i,o,u){return n(r^e^f,t,r,i,o,u)}function u(t,r,e,f,i,o,u){return n(e^(r|~f),t,r,i,o,u)}function a(t,e){var n=t[0],a=t[1],s=t[2],h=t[3];n=f(n,a,s,h,e[0],7,-680876936);h=f(h,n,a,s,e[1],12,-389564586);s=f(s,h,n,a,e[2],17,606105819);a=f(a,s,h,n,e[3],22,-1044525330);n=f(n,a,s,h,e[4],7,-176418897);h=f(h,n,a,s,e[5],12,1200080426);s=f(s,h,n,a,e[6],17,-1473231341);a=f(a,s,h,n,e[7],22,-45705983);n=f(n,a,s,h,e[8],7,1770035416);h=f(h,n,a,s,e[9],12,-1958414417);s=f(s,h,n,a,e[10],17,-42063);a=f(a,s,h,n,e[11],22,-1990404162);n=f(n,a,s,h,e[12],7,1804603682);h=f(h,n,a,s,e[13],12,-40341101);s=f(s,h,n,a,e[14],17,-1502002290);a=f(a,s,h,n,e[15],22,1236535329);n=i(n,a,s,h,e[1],5,-165796510);h=i(h,n,a,s,e[6],9,-1069501632);s=i(s,h,n,a,e[11],14,643717713);a=i(a,s,h,n,e[0],20,-373897302);n=i(n,a,s,h,e[5],5,-701558691);h=i(h,n,a,s,e[10],9,38016083);s=i(s,h,n,a,e[15],14,-660478335);a=i(a,s,h,n,e[4],20,-405537848);n=i(n,a,s,h,e[9],5,568446438);h=i(h,n,a,s,e[14],9,-1019803690);s=i(s,h,n,a,e[3],14,-187363961);a=i(a,s,h,n,e[8],20,1163531501);n=i(n,a,s,h,e[13],5,-1444681467);h=i(h,n,a,s,e[2],9,-51403784);s=i(s,h,n,a,e[7],14,1735328473);a=i(a,s,h,n,e[12],20,-1926607734);n=o(n,a,s,h,e[5],4,-378558);h=o(h,n,a,s,e[8],11,-2022574463);s=o(s,h,n,a,e[11],16,1839030562);a=o(a,s,h,n,e[14],23,-35309556);n=o(n,a,s,h,e[1],4,-1530992060);h=o(h,n,a,s,e[4],11,1272893353);s=o(s,h,n,a,e[7],16,-155497632);a=o(a,s,h,n,e[10],23,-1094730640);n=o(n,a,s,h,e[13],4,681279174);h=o(h,n,a,s,e[0],11,-358537222);s=o(s,h,n,a,e[3],16,-722521979);a=o(a,s,h,n,e[6],23,76029189);n=o(n,a,s,h,e[9],4,-640364487);h=o(h,n,a,s,e[12],11,-421815835);s=o(s,h,n,a,e[15],16,530742520);a=o(a,s,h,n,e[2],23,-995338651);n=u(n,a,s,h,e[0],6,-198630844);h=u(h,n,a,s,e[7],10,1126891415);s=u(s,h,n,a,e[14],15,-1416354905);a=u(a,s,h,n,e[5],21,-57434055);n=u(n,a,s,h,e[12],6,1700485571);h=u(h,n,a,s,e[3],10,-1894986606);s=u(s,h,n,a,e[10],15,-1051523);a=u(a,s,h,n,e[1],21,-2054922799);n=u(n,a,s,h,e[8],6,1873313359);h=u(h,n,a,s,e[15],10,-30611744);s=u(s,h,n,a,e[6],15,-1560198380);a=u(a,s,h,n,e[13],21,1309151649);n=u(n,a,s,h,e[4],6,-145523070);h=u(h,n,a,s,e[11],10,-1120210379);s=u(s,h,n,a,e[2],15,718787259);a=u(a,s,h,n,e[9],21,-343485551);t[0]=r(n,t[0]);t[1]=r(a,t[1]);t[2]=r(s,t[2]);t[3]=r(h,t[3])}function s(t){var r=[],e;for(e=0;e<64;e+=4){r[e>>2]=t.charCodeAt(e)+(t.charCodeAt(e+1)<<8)+(t.charCodeAt(e+2)<<16)+(t.charCodeAt(e+3)<<24)}return r}function h(t){var r=[],e;for(e=0;e<64;e+=4){r[e>>2]=t[e]+(t[e+1]<<8)+(t[e+2]<<16)+(t[e+3]<<24)}return r}function c(t){var r=t.length,e=[1732584193,-271733879,-1732584194,271733878],n,f,i,o,u,h;for(n=64;n<=r;n+=64){a(e,s(t.substring(n-64,n)))}t=t.substring(n-64);f=t.length;i=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(n=0;n<f;n+=1){i[n>>2]|=t.charCodeAt(n)<<(n%4<<3)}i[n>>2]|=128<<(n%4<<3);if(n>55){a(e,i);for(n=0;n<16;n+=1){i[n]=0}}o=r*8;o=o.toString(16).match(/(.*?)(.{0,8})$/);u=parseInt(o[2],16);h=parseInt(o[1],16)||0;i[14]=u;i[15]=h;a(e,i);return e}function p(t){var r=t.length,e=[1732584193,-271733879,-1732584194,271733878],n,f,i,o,u,s;for(n=64;n<=r;n+=64){a(e,h(t.subarray(n-64,n)))}t=n-64<r?t.subarray(n-64):new Uint8Array(0);f=t.length;i=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(n=0;n<f;n+=1){i[n>>2]|=t[n]<<(n%4<<3)}i[n>>2]|=128<<(n%4<<3);if(n>55){a(e,i);for(n=0;n<16;n+=1){i[n]=0}}o=r*8;o=o.toString(16).match(/(.*?)(.{0,8})$/);u=parseInt(o[2],16);s=parseInt(o[1],16)||0;i[14]=u;i[15]=s;a(e,i);return e}function y(t){var r="",n;for(n=0;n<4;n+=1){r+=e[t>>n*8+4&15]+e[t>>n*8&15]}return r}function l(t){var r;for(r=0;r<t.length;r+=1){t[r]=y(t[r])}return t.join("")}if(l(c("hello"))!=="5d41402abc4b2a76b9719d911017c592"){r=function(t,r){var e=(t&65535)+(r&65535),n=(t>>16)+(r>>16)+(e>>16);return n<<16|e&65535}}if(typeof ArrayBuffer!=="undefined"&&!ArrayBuffer.prototype.slice){(function(){function r(t,r){t=t|0||0;if(t<0){return Math.max(t+r,0)}return Math.min(t,r)}ArrayBuffer.prototype.slice=function(e,n){var f=this.byteLength,i=r(e,f),o=f,u,a,s,h;if(n!==t){o=r(n,f)}if(i>o){return new ArrayBuffer(0)}u=o-i;a=new ArrayBuffer(u);s=new Uint8Array(a);h=new Uint8Array(this,i,u);s.set(h);return a}})()}function d(t){if(/[\u0080-\uFFFF]/.test(t)){t=unescape(encodeURIComponent(t))}return t}function b(t,r){var e=t.length,n=new ArrayBuffer(e),f=new Uint8Array(n),i;for(i=0;i<e;i+=1){f[i]=t.charCodeAt(i)}return r?f:n}function g(t){return String.fromCharCode.apply(null,new Uint8Array(t))}function _(t,r,e){var n=new Uint8Array(t.byteLength+r.byteLength);n.set(new Uint8Array(t));n.set(new Uint8Array(r),t.byteLength);return e?n:n.buffer}function v(t){var r=[],e=t.length,n;for(n=0;n<e-1;n+=2){r.push(parseInt(t.substr(n,2),16))}return String.fromCharCode.apply(String,r)}function A(){this.reset()}A.prototype.append=function(t){this.appendBinary(d(t));return this};A.prototype.appendBinary=function(t){this._buff+=t;this._length+=t.length;var r=this._buff.length,e;for(e=64;e<=r;e+=64){a(this._hash,s(this._buff.substring(e-64,e)))}this._buff=this._buff.substring(e-64);return this};A.prototype.end=function(t){var r=this._buff,e=r.length,n,f=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],i;for(n=0;n<e;n+=1){f[n>>2]|=r.charCodeAt(n)<<(n%4<<3)}this._finish(f,e);i=l(this._hash);if(t){i=v(i)}this.reset();return i};A.prototype.reset=function(){this._buff="";this._length=0;this._hash=[1732584193,-271733879,-1732584194,271733878];return this};A.prototype.getState=function(){return{buff:this._buff,length:this._length,hash:this._hash}};A.prototype.setState=function(t){this._buff=t.buff;this._length=t.length;this._hash=t.hash;return this};A.prototype.destroy=function(){delete this._hash;delete this._buff;delete this._length};A.prototype._finish=function(t,r){var e=r,n,f,i;t[e>>2]|=128<<(e%4<<3);if(e>55){a(this._hash,t);for(e=0;e<16;e+=1){t[e]=0}}n=this._length*8;n=n.toString(16).match(/(.*?)(.{0,8})$/);f=parseInt(n[2],16);i=parseInt(n[1],16)||0;t[14]=f;t[15]=i;a(this._hash,t)};A.hash=function(t,r){return A.hashBinary(d(t),r)};A.hashBinary=function(t,r){var e=c(t),n=l(e);return r?v(n):n};A.ArrayBuffer=function(){this.reset()};A.ArrayBuffer.prototype.append=function(t){var r=_(this._buff.buffer,t,true),e=r.length,n;this._length+=t.byteLength;for(n=64;n<=e;n+=64){a(this._hash,h(r.subarray(n-64,n)))}this._buff=n-64<e?new Uint8Array(r.buffer.slice(n-64)):new Uint8Array(0);return this};A.ArrayBuffer.prototype.end=function(t){var r=this._buff,e=r.length,n=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],f,i;for(f=0;f<e;f+=1){n[f>>2]|=r[f]<<(f%4<<3)}this._finish(n,e);i=l(this._hash);if(t){i=v(i)}this.reset();return i};A.ArrayBuffer.prototype.reset=function(){this._buff=new Uint8Array(0);this._length=0;this._hash=[1732584193,-271733879,-1732584194,271733878];return this};A.ArrayBuffer.prototype.getState=function(){var t=A.prototype.getState.call(this);t.buff=g(t.buff);return t};A.ArrayBuffer.prototype.setState=function(t){t.buff=b(t.buff,true);return A.prototype.setState.call(this,t)};A.ArrayBuffer.prototype.destroy=A.prototype.destroy;A.ArrayBuffer.prototype._finish=A.prototype._finish;A.ArrayBuffer.hash=function(t,r){var e=p(new Uint8Array(t)),n=l(e);return r?v(n):n};return A})},{}],2:[function(t,r,e){"use strict";function n(t){return t&&typeof Symbol!=="undefined"&&t.constructor===Symbol?"symbol":typeof t}var f=t("./browser-md5-file");(function(t){if(typeof define==="function"&&define.amd){define([],t)}else if((typeof window==="undefined"?"undefined":n(window))==="object"){window.browserMD5File=t()}})(function(){return f})},{"./browser-md5-file":3}],3:[function(t,r,e){"use strict";var n=t("spark-md5");r.exports=function(t,r){var e=File.prototype.slice||File.prototype.mozSlice||File.prototype.webkitSlice;var f=2097152;var i=Math.ceil(t.size/f);var o=0;var u=new n.ArrayBuffer;var a=new FileReader;s();a.onloadend=function(t){u.append(t.target.result);o++;if(o<i){s()}else{r(null,u.end())}};a.onerror=function(){r("oops, something went wrong.")};function s(){var r=o*f;var n=r+f>=t.size?t.size:r+f;a.readAsArrayBuffer(e.call(t,r,n))}}},{"spark-md5":1}]},{},[2]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
