(function(e){e.fn.zclip=function(t){if(typeof t=="object"&&!t.length){var i=e.extend({path:"ZeroClipboard.swf",copy:null,beforeCopy:null,afterCopy:null,clickAfter:true,setHandCursor:true,setCSSEffects:true},t);return this.each(function(){var t=e(this);if(t.is(":visible")&&(typeof i.copy=="string"||e.isFunction(i.copy))){ZeroClipboard.setMoviePath(i.path);var s=new ZeroClipboard.Client;if(e.isFunction(i.copy)){t.bind("zClip_copy",i.copy)}if(e.isFunction(i.beforeCopy)){t.bind("zClip_beforeCopy",i.beforeCopy)}if(e.isFunction(i.afterCopy)){t.bind("zClip_afterCopy",i.afterCopy)}s.setHandCursor(i.setHandCursor);s.setCSSEffects(i.setCSSEffects);s.addEventListener("mouseOver",function(e){t.trigger("mouseenter")});s.addEventListener("mouseOut",function(e){t.trigger("mouseleave")});s.addEventListener("mouseDown",function(o){t.trigger("mousedown");if(!e.isFunction(i.copy)){s.setText(i.copy)}else{s.setText(t.triggerHandler("zClip_copy"))}if(e.isFunction(i.beforeCopy)){t.trigger("zClip_beforeCopy")}});s.addEventListener("complete",function(s,o){if(e.isFunction(i.afterCopy)){t.trigger("zClip_afterCopy")}else{if(o.length>500){o=o.substr(0,500)+"...\n\n("+(o.length-500)+" characters not shown)"}t.removeClass("hover");baseUtils.show.blueTip("复制成功！请在微信内打开哦 。")}if(i.clickAfter){t.trigger("click")}});s.glue(t[0],t.parent()[0]);e(window).bind("load resize",function(){s.reposition()})}})}else{if(typeof t=="string"){return this.each(function(){var i=e(this);t=t.toLowerCase();var s=i.data("zclipId");var o=e("#"+s+".zclip");if(t=="remove"){o.remove();i.removeClass("active hover")}else{if(t=="hide"){o.hide();i.removeClass("active hover")}else{if(t=="show"){o.show()}}}})}}}})(jQuery);var ZeroClipboard={version:"1.0.7",clients:{},moviePath:"ZeroClipboard.swf",nextId:1,$:function(e){if(typeof e=="string"){e=document.getElementById(e)}if(!e.addClass){e.hide=function(){this.style.display="none"};e.show=function(){this.style.display=""};e.addClass=function(e){this.removeClass(e);this.className+=" "+e};e.removeClass=function(e){var t=this.className.split(/\s+/);var i=-1;for(var s=0;s<t.length;s++){if(t[s]==e){i=s;s=t.length}}if(i>-1){t.splice(i,1);this.className=t.join(" ")}return this};e.hasClass=function(e){return!!this.className.match(new RegExp("\\s*"+e+"\\s*"))}}return e},setMoviePath:function(e){this.moviePath=e},dispatch:function(e,t,i){var s=this.clients[e];if(s){s.receiveEvent(t,i)}},register:function(e,t){this.clients[e]=t},getDOMObjectPosition:function(e,t){var i={left:0,top:0,width:e.width?e.width:e.offsetWidth,height:e.height?e.height:e.offsetHeight};if(e&&e!=t){i.left+=e.offsetLeft;i.top+=e.offsetTop}return i},Client:function(e){this.handlers={};this.id=ZeroClipboard.nextId++;this.movieId="ZeroClipboardMovie_"+this.id;ZeroClipboard.register(this.id,this);if(e){this.glue(e)}}};ZeroClipboard.Client.prototype={id:0,ready:false,movie:null,clipText:"",handCursorEnabled:true,cssEffects:true,handlers:null,glue:function(e,t,i){this.domElement=ZeroClipboard.$(e);var s=99;if(this.domElement.style.zIndex){s=parseInt(this.domElement.style.zIndex,10)+1}if(typeof t=="string"){t=ZeroClipboard.$(t)}else{if(typeof t=="undefined"){t=document.getElementsByTagName("body")[0]}}var o=ZeroClipboard.getDOMObjectPosition(this.domElement,t);this.div=document.createElement("div");this.div.className="zclip";this.div.id="zclip-"+this.movieId;$(this.domElement).data("zclipId","zclip-"+this.movieId);var a=this.div.style;a.position="absolute";a.left=""+o.left+"px";a.top=""+o.top+"px";a.width=""+o.width+"px";a.height=""+o.height+"px";a.zIndex=s;if(typeof i=="object"){for(addedStyle in i){a[addedStyle]=i[addedStyle]}}t.appendChild(this.div);this.div.innerHTML=this.getHTML(o.width,o.height)},getHTML:function(e,t){var i="";var s="id="+this.id+"&width="+e+"&height="+t;if(navigator.userAgent.match(/MSIE/)){var o=location.href.match(/^https/i)?"https://":"http://";i+='<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="'+o+'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0" width="'+e+'" height="'+t+'" id="'+this.movieId+'" align="middle"><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="false" /><param name="movie" value="'+ZeroClipboard.moviePath+'" /><param name="loop" value="false" /><param name="menu" value="false" /><param name="quality" value="best" /><param name="bgcolor" value="#ffffff" /><param name="flashvars" value="'+s+'"/><param name="wmode" value="transparent"/></object>'}else{i+='<embed id="'+this.movieId+'" src="'+ZeroClipboard.moviePath+'" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="'+e+'" height="'+t+'" name="'+this.movieId+'" align="middle" allowScriptAccess="always" allowFullScreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="'+s+'" wmode="transparent" />'}return i},hide:function(){if(this.div){this.div.style.left="-2000px"}},show:function(){this.reposition()},destroy:function(){if(this.domElement&&this.div){this.hide();this.div.innerHTML="";var e=document.getElementsByTagName("body")[0];try{e.removeChild(this.div)}catch(e){}this.domElement=null;this.div=null}},reposition:function(e){if(e){this.domElement=ZeroClipboard.$(e);if(!this.domElement){this.hide()}}if(this.domElement&&this.div){var t=ZeroClipboard.getDOMObjectPosition(this.domElement);var i=this.div.style;i.left=""+t.left+"px";i.top=""+t.top+"px"}},setText:function(e){this.clipText=e;if(this.ready){this.movie.setText(e)}},addEventListener:function(e,t){e=e.toString().toLowerCase().replace(/^on/,"");if(!this.handlers[e]){this.handlers[e]=[]}this.handlers[e].push(t)},setHandCursor:function(e){this.handCursorEnabled=e;if(this.ready){this.movie.setHandCursor(e)}},setCSSEffects:function(e){this.cssEffects=!!e},receiveEvent:function(e,t){e=e.toString().toLowerCase().replace(/^on/,"");switch(e){case"load":this.movie=document.getElementById(this.movieId);if(!this.movie){var i=this;setTimeout(function(){i.receiveEvent("load",null)},1);return}if(!this.ready&&navigator.userAgent.match(/Firefox/)&&navigator.userAgent.match(/Windows/)){var i=this;setTimeout(function(){i.receiveEvent("load",null)},100);this.ready=true;return}this.ready=true;try{this.movie.setText(this.clipText)}catch(e){}try{this.movie.setHandCursor(this.handCursorEnabled)}catch(e){}break;case"mouseover":if(this.domElement&&this.cssEffects){this.domElement.addClass("hover");if(this.recoverActive){this.domElement.addClass("active")}}break;case"mouseout":if(this.domElement&&this.cssEffects){this.recoverActive=false;if(this.domElement.hasClass("active")){this.domElement.removeClass("active");this.recoverActive=true}this.domElement.removeClass("hover")}break;case"mousedown":if(this.domElement&&this.cssEffects){this.domElement.addClass("active")}break;case"mouseup":if(this.domElement&&this.cssEffects){this.domElement.removeClass("active");this.recoverActive=false}break}if(this.handlers[e]){for(var s=0,o=this.handlers[e].length;s<o;s++){var a=this.handlers[e][s];if(typeof a=="function"){a(this,t)}else{if(typeof a=="object"&&a.length==2){a[0][a[1]](this,t)}else{if(typeof a=="string"){window[a](this,t)}}}}}}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
