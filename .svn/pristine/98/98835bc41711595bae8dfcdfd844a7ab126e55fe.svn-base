$(document).ready(function(){Business.init()});var Business=function(){var e={};var i=false;e.submitLimit=false;e.communityId=-1;e.type=-1;e.dynamicId=-1;e.init=function(){changeSaveFlag(true);e.type=$("#admin_data").data("type");e.communityId=$("#admin_data").data("community_id");if(e.type==1){e.dynamicId=GetQueryString("id")}$("#uploadFile").click(function(){$("#selectPdfFile").click()});$("#deleteUploadedPdfFile").click(function(){$("#uploadedFileUrl").data("file_url","");$(".uploadBoxPdf").fadeOut(100)});$(".uploadFileBtnWrapper").on("change","#selectPdfFile",function(){a(this.files,"pdf","Pdf",100)});$("#releaseDynamic").click(function(){if(e.submitLimit==true){baseUtils.show.redTip("正在提交中，请稍后再试");return false}if(i){baseUtils.show.redTip("文件正在上传中，请稍后再提交");return false}var t={};var l=$("#dynamicTitle").val();if(l==""||l==undefined){baseUtils.show.redTip("请输入动态标题");return false}t["title"]=l;var a=UE.getEditor("container");var d=a.getContent();var n=a.getPlainTxt();if(d==""||d==undefined){baseUtils.show.redTip("请输入动态内容");return false}t["org_content"]=d;t["content"]=n;t["community_id"]=e.communityId;var o=$("#uploadedFileUrl").data("file_url");var s=$("#uploadedFileUrl").data("file_name");var u=$("#uploadedFileUrl").data("file_size");if(o!=""&&o!=undefined){t["file_url"]=o;t["file_name"]=s;t["file_size"]=u}else{t["file_url"]="";t["file_name"]="";t["file_size"]=""}var r="";if(e.type==1){t["id"]=e.dynamicId;r="/smallCommunity/updateDynamic"}else{r="/smallCommunity/uploadDynamic"}e.submitLimit=true;$.ajax(r,{type:"POST",dataType:"json",data:{params:t},success:function(i){if(i.code==0){if(e.type==1){baseUtils.show.blueTip("保存编辑成功")}else{baseUtils.show.blueTip("发布动态成功")}setTimeout(function(){window.location.href="/smallCommunity/dynamicList?community_id="+e.communityId},700)}else{baseUtils.show.redTip("发布出现问题，请稍后再试");e.submitLimit=false}},error:function(i,t,l){e.submitLimit=false;console.log(l);baseUtils.show.redTip("网络错误，请稍后再试！")}})})};function t(e){var i=null;if(window.createObjectURL!=undefined){i=window.createObjectURL(e)}else if(window.URL!=undefined){i=window.URL.createObjectURL(e)}else if(window.webkitURL!=undefined){i=window.webkitURL.createObjectURL(e)}return i}function l(e){if(window.revokeObjectURL!=undefined){window.revokeObjectURL(e)}else if(window.URL!=undefined){window.URL.revokeObjectURL(e)}else if(window.webkitURL!=undefined){window.webkitURL.revokeObjectURL(e)}}function a(e,a,n,o){if(e&&e.length>0){var s=e[0];var u=s.name;if(!u.endsWith("pdf")&&!u.endsWith("PDF")){baseUtils.show.redTip("请选择 pdf 格式的文件");$("#selectPdfFile").remove();$("#uploadedFileUrl").before('<input class="selectPdfFileInput" id="selectPdfFile" type="file" accept="application/pdf"/>');return false}var r=t(s);var f=(s.size/(1024*1024)).toFixed(2);$("#uploadedFileUrl").data("file_size",f);if(n=="Audio1"){fileAudio1Size=f;var c=document.getElementById("resourceTime");c.src=r;c.onload=function(){l(r)}}$("#audioURL"+n).hide();$(".uploadBox"+n).fadeIn(300);d(u,f);$("#uploadedFileUrl").data("file_name",u);if($uploadFile.checkFileSize(s,o)){i=true;$uploadFile.uploadRes(s,a,function(e){var i=parseInt(e*100);$(".uploadPLineActive"+n).css("width",i+"%");$(".uploadPercent"+n).text(i+"%")},function(e){i=false;console.log(e);baseUtils.show.blueTip("上传成功！");$(".uploadPLine"+n).hide();$(".upload"+n+"Name").show();$(".uploadPercent"+n).text("删除");var t=e.data.access_url;$("#uploadedFileUrl").data("file_url",t)},function(e){i=false;console.error("上传失败!!!");console.log(e);baseUtils.show.redTip("上传失败！")})}else{baseUtils.show.redTip("上传资源限制在"+o+"MB内！");$(".upLoad"+n).val("")}}else{baseUtils.show.redTip("网络错误，请稍后再试！");console.log("网络错误，请稍后再试！")}}function d(e,i){$(".uploadPdfName").html(e).hide();$(".uploadPdfSize span").html(i);$(".uploadPLinePdf").show().find(".uploadPLineActivePdf").css("width","0");$(".uploadPercentPdf").html("")}return e}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
