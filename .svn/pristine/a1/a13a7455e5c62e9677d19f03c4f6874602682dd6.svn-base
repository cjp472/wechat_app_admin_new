(function(t){var e={inEffect:{opacity:"show"},inEffectDuration:600,stayTime:1500,text:"",sticky:false,type:"notice",position:"top-right",closeText:"",close:null};var o={init:function(o){if(o){t.extend(e,o)}},showToast:function(o){var s={};t.extend(s,e,o);var a,i,n,r,c;a=!t(".toast-container").length?t("<div></div>").addClass("toast-container").addClass("toast-position-"+s.position).appendTo("body"):t(".toast-container");i=t("<div></div>").addClass("toast-item-wrapper");n=t("<div></div>").hide().addClass("toast-item toast-type-"+s.type).appendTo(a).html(t("<p>").append(s.text)).animate(s.inEffect,s.inEffectDuration).wrap(i);r=t("<div></div>").addClass("toast-item-close").prependTo(n).html(s.closeText).click(function(){t().toastmessage("removeToast",n,s)});c=t("<div></div>").addClass("toast-item-image").addClass("toast-item-image-"+s.type).prependTo(n);if(navigator.userAgent.match(/MSIE 6/i)){a.css({top:document.documentElement.scrollTop})}if(!s.sticky){setTimeout(function(){t().toastmessage("removeToast",n,s)},s.stayTime)}return n},showNoticeToast:function(e){var o={text:e,type:"notice"};return t().toastmessage("showToast",o)},showSuccessToast:function(e){var o={text:e,type:"success"};return t().toastmessage("showToast",o)},showErrorToast:function(e){var o={text:e,type:"error"};return t().toastmessage("showToast",o)},showWarningToast:function(e){var o={text:e,type:"warning"};return t().toastmessage("showToast",o)},removeToast:function(t,e){t.animate({opacity:"0"},600,function(){t.parent().animate({height:"0px"},300,function(){t.parent().remove()})});if(e&&e.close!==null){e.close()}}};t.fn.toastmessage=function(e){if(o[e]){return o[e].apply(this,Array.prototype.slice.call(arguments,1))}else if(typeof e==="object"||!e){return o.init.apply(this,arguments)}else{t.error("Method "+e+" does not exist on jQuery.toastmessage")}}})(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
