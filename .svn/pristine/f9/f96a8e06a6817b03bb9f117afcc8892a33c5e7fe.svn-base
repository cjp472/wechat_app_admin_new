$(document).ready(function(){Business.init()});var Business=function(){var e={};var i=false;e.submitLimit=false;e.communityId=-1;e.type=-1;e.dynamicId=-1;e.init=function(){changeSaveFlag(true);e.type=$("#admin_data").data("type");e.communityId=$("#admin_data").data("community_id");if(e.type==1){e.dynamicId=GetQueryString("id")}$("#uploadFile").click(function(){$("#selectPdfFile").click()});$("#deleteUploadedPdfFile").click(function(){$("#uploadedFileUrl").data("file_url","");$("#selectPdfFile").val("");$(".uploadBoxPdf").fadeOut(100)});$(".uploadFileBtnWrapper").on("change","#selectPdfFile",function(){if(!i){a(this.files,"pdf","Pdf",20)}else{baseUtils.show.redTip("文件正在上传中，请稍后再试")}});$("#releaseDynamic").click(function(){if(e.submitLimit==true){baseUtils.show.redTip("正在提交中，请稍后再试");return false}if(i){baseUtils.show.redTip("文件正在上传中，请稍后再提交");return false}var l={};var t=$("#dynamicTitle").val();if(t==""||t==undefined){baseUtils.show.redTip("请输入动态标题");return false}l["title"]=t;var a=UE.getEditor("container");var d=a.getContent();var n=a.getPlainTxt();if(d==""||d==undefined){baseUtils.show.redTip("请输入动态内容");return false}l["org_content"]=d;l["content"]=n;l["community_id"]=e.communityId;var o=$("#uploadedFileUrl").data("file_url");var s=$("#uploadedFileUrl").data("file_name");var u=$("#uploadedFileUrl").data("file_size");if(o!=""&&o!=undefined){l["file_url"]=o;l["file_name"]=s;l["file_size"]=u}else{l["file_url"]="";l["file_name"]="";l["file_size"]=""}var f="";if(e.type==1){l["id"]=e.dynamicId;f="/smallCommunity/updateDynamic"}else{f="/smallCommunity/uploadDynamic"}e.submitLimit=true;$.ajax(f,{type:"POST",dataType:"json",data:{params:l},success:function(i){if(i.code==0){if(e.type==1){baseUtils.show.blueTip("保存编辑成功")}else{baseUtils.show.blueTip("发布动态成功")}setTimeout(function(){window.location.href="/smallCommunity/dynamicList?community_id="+e.communityId},700)}else{baseUtils.show.redTip("发布出现问题，请稍后再试");e.submitLimit=false}},error:function(i,l,t){e.submitLimit=false;console.log(t);baseUtils.show.redTip("网络错误，请稍后再试！")}})})};function l(e){var i=null;if(window.createObjectURL!=undefined){i=window.createObjectURL(e)}else if(window.URL!=undefined){i=window.URL.createObjectURL(e)}else if(window.webkitURL!=undefined){i=window.webkitURL.createObjectURL(e)}return i}function t(e){if(window.revokeObjectURL!=undefined){window.revokeObjectURL(e)}else if(window.URL!=undefined){window.URL.revokeObjectURL(e)}else if(window.webkitURL!=undefined){window.webkitURL.revokeObjectURL(e)}}function a(e,l,t,a){if(e&&e.length>0){var n=e[0];var o=n.name;if(!o.toLowerCase().endsWith("pdf")){baseUtils.show.redTip("请选择 pdf 格式的文件");$("#selectPdfFile").remove();$("#uploadedFileUrl").before('<input class="selectPdfFileInput" id="selectPdfFile" type="file" accept="application/pdf"/>');return false}if($uploadFile.checkFileSize(n,a)){var s=(n.size/(1024*1024)).toFixed(2);$("#uploadedFileUrl").data("file_size",s);$("#audioURL"+t).hide();$(".uploadBox"+t).fadeIn(300);d(o,s);$("#uploadedFileUrl").data("file_name",o);i=true;$uploadFile.uploadRes(n,l,function(e){var i=parseInt(e*100);$(".uploadPLineActive"+t).css("width",i+"%");$(".uploadPercent"+t).text(i+"%")},function(e){i=false;console.log(e);baseUtils.show.blueTip("上传成功！");$(".uploadPLine"+t).hide();$(".upload"+t+"Name").show();$(".uploadPercent"+t).text("删除");var l=e.data.access_url;$("#uploadedFileUrl").data("file_url",l)},function(e){i=false;console.error("上传失败!!!");console.log(e);baseUtils.show.redTip("上传失败！")})}else{baseUtils.show.redTip("上传失败，请勿上传超过 "+a+"Mb 的PDF文件");$(".upLoad"+t).val("")}}else{console.log("网络错误，请稍后再试！")}}function d(e,i){$(".uploadPdfName").html(e).hide();$(".uploadPdfSize span").html(i);$(".uploadPLinePdf").show().find(".uploadPLineActivePdf").css("width","0");$(".uploadPercentPdf").html("")}return e}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
