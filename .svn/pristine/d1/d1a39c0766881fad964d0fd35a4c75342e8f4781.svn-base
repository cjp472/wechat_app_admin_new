<template>
    <div class="choose-box-part" v-show="is_show_box">
        <div class="choose-box-mb"></div>
        <div class="choose-box-main">
            <div class="choose-box-title">添加商品
                <img class="choose-box-close" @click="closeChooseBox" src="/images/admin/shopDiy/icon_Pop-ups_close.svg"/>
            </div>
            <search_part></search_part>
            <tab_part :tab_title="tab_title"></tab_part>
            <div class="main-content-list">
                <div v-for="(item,index) in data_list">
                    <resource_item :item="item" :index="index"></resource_item>
                </div>
                <!--提示loading组件-->
                <loading v-show="is_show_search_loading"></loading>
            </div>
            <div class="choose-box-action">
                <span class="cancel-button" @click="closeChooseBox">取消</span>
                <span class="choose-add-button" @click="addListButton">添加</span>
            </div>
        </div>
    </div>
</template>

<script>
    import EventBus from '../../../libs/eventbus';
    import NetWork from '../../../libs/network.js';
    //搜索框
    import search_part from './search_part.vue';
    //切换tab
    import tab_part from './tab_part.vue';
    //显示资源列表
    import resource_item from './resource_item.vue';
    import loading from '../../../globalWidget/loading.vue';
    export default {
        data: function () {
            return {
                //模块位置(初始值无效）
                index:-1,
                //是否显示搜索框
                is_show_box: false,
                //模块序号(初始值无效）
                index_sort:-1,
                //tab的名称：如直播、专栏、社群
                tab_title:[],
                //搜索模块
                tab_module:[],
                //判断出当前栏目用于搜索
                current_tab_module: 4,
                //请求返回的数据
                module_data:[],
                //每个栏目的数据列表
                data_list:[],
                //需要添加给编辑框组件的数据列表
                need_add_data_list:[],
                //是否显示loading
                is_show_search_loading:false
            }
        },
        created: function () {
            //显示搜索模块
            EventBus.$on('is_show_choose_box',this.showChooseBox);
            //获取搜索关键词
            EventBus.$on('get_input_word',this.toSearch);
            //切换模块
            EventBus.$on('change_tab',this.changeTabModule);

            EventBus.$on('choose_add_item',this.changeAddItem);
        },
        methods: {
            //显示搜索模块及初始化搜索数据
            showChooseBox: function (obj) {

                let choosedIdArr = [];

                //已选择的资源id
                for(let i=0,j=obj.index_data.list.length;i<j;i++){
                    choosedIdArr.push(obj.index_data.list[i].id);
                }

                //获取已经有的资源id，同步给搜索框
                if(choosedIdArr.length>0){
                    EventBus.$emit('get_resource_choosed_id',{'id_arr':choosedIdArr});
                }


                this.data_list = [];
                this.is_show_box = true;
                //index_sort 首页模块序号 1-轮播图模块、2-分类导航模块、3-社群模块、4-会员及专利模块 5-问答模块 6-直播模块 7-最新模块

                let index = obj.index;
                let index_sort = obj.index_sort;

                this.index_sort = index_sort;
                this.index = index;

                //获取搜索模块内容 1-图文、2-音频、3-视频、4-直播、5-活动、6-专栏、7-社群 8-会员
                if(index_sort === 3) {
                    this.tab_title = ['社群'];
                    this.tab_module = [7];
                    this.current_tab_module = 7;
                }
                else if(index_sort === 4) {
                    this.tab_title = ['专栏','会员'];
                    this.tab_module = [6, 8];
                    this.current_tab_module = 6;
                }
                else if(index_sort === 6){
                    this.tab_title = ['直播'];
                    this.tab_module = [4];
                    this.current_tab_module = 4;
                }
                //初始化搜索数据（排除已经有的数据）
                this.initData(choosedIdArr);
            },
            //关闭搜索模块
            closeChooseBox: function () {
                this.is_show_box = false;
                //关闭后复位
                this.need_add_data_list = [];
                EventBus.$emit('reset_tab_index');
                EventBus.$emit('clear_input_word');
            },
            //维护选中的数据列表
            changeAddItem: function (obj) {
                if(obj.select_click === true){
                    this.need_add_data_list.push(this.data_list[obj.index]);
                    console.log(this.need_add_data_list);
                }else {
                    let index = this.need_add_data_list.indexOf(this.data_list[obj.index]);
                    this.need_add_data_list.splice(index,1);
                    console.log(this.need_add_data_list);
                }
            },
            //添加数据给编辑框组件
            addListButton: function () {
                //如果选中了列表，则同步给父组件
                let need_add_data_list = this.need_add_data_list;
                if(need_add_data_list.length>0){
                    let index = this.index;
                    let parm = {
                        index:this.index,
                        need_add_data_list:this.need_add_data_list,
                        index_sort: this.index_sort
                    };
                    EventBus.$emit("add_list_to_sidebar",parm);
                }
                this.closeChooseBox();
            },
            //切换tab栏目维护该父组件的数据
            changeTabModule: function (index) {
                this.current_tab_module = this.tab_module[index];
                //切换后构造新的栏目数据列表
                this.data_list = this.module_data[index];
                //切换tab后要复位为空数组
                this.need_add_data_list = [];
            },
            //初始化搜索数据
            initData: function (choosedIdArr) {
                let that = this;
                that.is_show_search_loading = true;
                NetWork.request("get_diy_module", {module:that.tab_module,id_arr:choosedIdArr}, function (data) {
                    if (parseInt(data.code) === 0) {
                        that.module_data = data.data.module_data;
                        //请求数据后默认显示第一个tab栏目的数据列表
                        that.data_list = that.module_data[0];
                        that.is_show_search_loading = false;
                    } else {
                        that.is_show_search_loading = false;
                        alert('get_diy_module:请求错误！');
                    }
                });
            },
            //搜索按钮提交请求数据
            toSearch: function (obj) {
                let that = this;

                let parm = {
                    id_arr:obj.id_arr,
                    search_content:obj.input_word,
                    module:that.current_tab_module
                };

                that.is_show_search_loading = true;
                NetWork.request("search_diy_module", parm, function (data) {
                        if (parseInt(data.code) === 0) {
                            if(that.current_tab_module === data.data.module){
                                that.data_list = data.data.module_data;
                                that.is_show_search_loading = false;
                            }
                        }
                        else{
                            that.is_show_search_loading = false;
                            alert("搜索失败请重试");
                        }

                    }
                )
            }
        },
        components: {
            search_part,
            tab_part,
            resource_item,
            loading
        }
    }
</script>

<style>
    .choose-box-part {
        height: 100%;
        width: 100%;
        position: fixed;
        top: 0;
        left: 0;
        overflow: hidden;
        z-index: 999;
    }
    .choose-box-mb{
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.3);
        position: absolute;
        top: 0;
        left: 0;
        z-index: 999;
    }
    .choose-box-main {
        background-color: #ffffff;
        width: 640px;
        height: 615px;
        border-radius: 10px;
        overflow: hidden;
        margin: auto;
        top: 50%;
        transform: translate(0, -50%);
        position: absolute;
        left: 0;
        right: 0;
        z-index: 1000;
    }
    .choose-box-title {
        position: relative;
        width: 100%;
        height: 52px;
        line-height: 52px;
        font-size: 16px;
        color: #353535;
        border-radius: 10px;
        background-color: #fafbfc;
        padding-left: 30px;
    }
    .choose-box-close {
        position: absolute;
        display: inline-block;
        width: 12px;
        height: 12px;
        top: 50%;
        right: 20px;
        margin-top: -6px;
        cursor: pointer;
    }
    .main-content-list {
        position: relative;
        height: 350px;
        overflow: auto;
    }
    .choose-box-action {
        height: 36px;
        line-height: 36px;
        margin: 30px auto;
        text-align: center;
    }
    .choose-box-action .cancel-button {
        display: inline-block;
        width: 100px;
        height: 36px;
        border-radius: 2px;
        background-color: #fafbfc;
        border: solid 1px #e5e7eb;
        text-align: center;
        margin-right: 18px;
        cursor: pointer;
    }
    .choose-box-action .choose-add-button {
        display: inline-block;
        width: 100px;
        height: 36px;
        border-radius: 2px;
        background-color: #2a75ed;
        /*border: solid 1px #e5e7eb;*/
        text-align: center;
        cursor: pointer;
        color: #fff;
    }
</style>