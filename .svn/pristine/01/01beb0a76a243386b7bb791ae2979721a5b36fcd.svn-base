<?php
/**
 * Created by PhpStorm.
 * User: breeze
 * Date: 20/07/2017
 * Time: 18:11
 */

class GDImage
{
    private $info;
    private $image;

    public function __construct($src)
    {
        $info = getimagesize($src);
        if ($info === false) {
            return null;
        }
        $this->info = array(
            "width" => $info[0],
            "height" => $info[1],
            "type" => image_type_to_extension($info[2], false),
            "mime" => $info['mime']
        );
        if ($this->info['type'] == 'bmp') {
            $fun = "imagecreatefrompng";
        } else {
            $fun = "imagecreatefrom{$this->info['type']}";
        }
        $this->image = $fun($src);
    }

    /**
     * 压缩图片
     * @param $width
     * @param int $height
     * @return bool
     */
    public function thumb($width = 750, $height = 0)
    {
        if ($this->info["width"] < $width) {
            $width = $this->info["width"];
            return false;
        }

        //如果height=0则计算出height
        if ($height == 0) {
            $height = (int)($width * $this->info["height"] / $this->info["width"]);
        }

        $imageThumb = imagecreatetruecolor($width, $height);
        imagecopyresampled($imageThumb, $this->image, 0, 0, 0, 0, $width, $height,
            $this->info["width"], $this->info["height"]);
        imagedestroy($this->image);
        $this->image = $imageThumb;
        return true;
    }

    public function waterMarkText($text, $fontPath, $fontSize, $color, $x, $y, $angle)
    {
        $color = imagecolorallocatealpha($this->image, $color[0], $color[1], $color[2], $color[3]);
        imagettftext($this->image, $fontSize, $angle, $x, $y, $color, $fontPath, $text);
    }

    /**
     * 加水印
     * @param $source
     * @param $x
     * @param $y
     * @param $alpha
     */
    public function waterMarkImage($source, $x, $y, $alpha)
    {
        $markInfo = getimagesize($source);
        //3、获取水印图片类型
        $markType = image_type_to_extension($markInfo[2], false);
        // //4、在内存创建图像
        $markCreateImageFunc = "imagecreatefrom{$markType}";
        //5、把水印图片复制到内存中
        $water = $markCreateImageFunc($source);
        //特别处理，设置透明
        $color = imagecolorallocate($water, 255, 255, 255);
        // imagefill($water,0,0,$color);
        imagecolortransparent($water, $color);
        //6、合并图片
        imagecopymerge($this->image, $water, $x, $y, 0, 0, $markInfo[0], $markInfo[1], $alpha);
    }

    public function show()
    {
        header("Content-type:" . $this->info['mime']);
        $outputfunc = "image{$this->info['type']}";
        $outputfunc($this->image);
    }

    public function save($path, $newname, $quality = 80)
    {
        $outputfunc = "image{$this->info['type']}";
        if ($this->info['type'] == 'jpg' || $this->info['type'] == 'jpeg') {
            $outputfunc = "imagepng";
//            $outputfunc($this->image, $path . '/' . $newname . '.' . $this->info['type'], $quality);
        }
        $outputfunc($this->image, $path . '/' . $newname . '.' . $this->info['type']);
//        }

        return $path . '/' . $newname . '.' . $this->info['type'];
    }

    public function getImage()
    {
        return $this->image;
    }


    public function __destruct()
    {
        imagedestroy($this->image);
    }

}

?>