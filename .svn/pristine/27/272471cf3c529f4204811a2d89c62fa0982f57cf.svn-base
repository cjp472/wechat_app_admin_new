<?php

namespace App\Http\Controllers\Tools;
use App\Http\Controllers\Controller;
use App\Http\Controllers\Tools\AppUtils;
use App\Http\Requests;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Input;
use App\Http\Controllers\Tools\Utils;
use Illuminate\Support\Facades\Request;
use stdClass;

date_default_timezone_set('PRC');

class MessagePushController extends Controller {

    public function __construct()
    {
    }
    public function templateNotice(){
        $wholeUrl = "http://118.89.49.65:45678/open/template.stat/1.0";
        //发包
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $wholeUrl);
        curl_setopt($ch, CURLOPT_HEADER, 0);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, '');
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
        $ret = curl_exec($ch);
        $result = json_decode($ret,true);
        if (empty($result)) {
            return response()->json(['code'=>-1,'msg'=>'内网请求有误']);
        }else if (array_key_exists('code',$result) && $result['code'] == 0){
            if (array_key_exists('data',$result) && !empty($result['data']) ) {
                //存在模板通知内容，

                foreach ($result['data'] as $k=>$v) {
                    $app_id = $k;
                    $res_id_arr = [];
                    foreach ($result['data'] as $key=>$value) {
                        if ($key == $app_id)
                            $res_id_arr = $value;
                    }
                    $params = [];
                    $params['id'] = Utils::getUniId('n_');
                    $params['title'] = '服务号通知结果';
                    $params['created_at'] = Utils::getTime();
                    $params['notice_type'] = 1;
                    $params['target_user'] = $app_id;
                    $notice_detail = '' ;
                    $params['notice_time'] =date('Y-m-d H:i:s',strtotime('+2 hours')) ;//定时脚本调用之后两个小时
                    $insertResult = true ;//入表结果

                    foreach ($res_id_arr as $k1=>$v1) {
                        $res_id = $k1;
                        $sql = "
            SELECT
            *
        FROM
            (
                        SELECT
                            id,title
                        FROM
                            t_audio
                        WHERE
                            app_id='{$app_id} 'AND id ='{$res_id}'
                        AND audio_state = 0
                UNION ALL
                    (
                        SELECT
                            id,title
                        FROM
                            t_video
                        WHERE
                            app_id='{$app_id} ' AND id ='{$res_id}' 
                        AND video_state = 0
                    )
                UNION ALL
                    (
                        SELECT
                            id,title
                        FROM
                            t_image_text
                        WHERE
                            app_id='{$app_id} ' AND id ='{$res_id}'
                        AND display_state = 0
                    )
                UNION ALL
                    (
                        SELECT
                            id,title
                        FROM
                            t_alive
                        WHERE
                            app_id='{$app_id} ' AND id ='{$res_id}'
                        AND state = 0
                    )
            )v1 ";

                        $resource_info = DB::select($sql);
                        if (!empty($resource_info)) {
                            if (array_key_exists('success',$v1) && array_key_exists('failed',$v1)) {
                                $successCount = $v1['success'];
                                $failCount = $v1['failed'];
                                $failInfo = $v1['failed_info'][0]['msg'];
                                $notice_detail .= "《{$resource_info[0]->title}》&#09&#09通知成功{$successCount}人/失败{$failCount}人&#09&#09失败原因：{$failInfo}<br />";
                            }
                            if(array_key_exists('success',$v1) && !array_key_exists('failed',$v1)) {
                                $successCount = $v1['success'];
                                $failCount = 0;
                                $failInfo = '';
                                $notice_detail .= "《{$resource_info[0]->title}》&#09&#09通知成功{$successCount}人/失败{$failCount}人&#09&#09<br />";
                            }
                            if (!array_key_exists('success',$v1) && array_key_exists('failed',$v1)) {
                                $successCount = 0;
                                $failCount = $v1['failed'];
                                $failInfo = $v1['failed_info'][0]['msg'];
                                $notice_detail .= "《{$resource_info[0]->title}》&#09&#09通知成功{$successCount}人/失败{$failCount}人&#09&#09失败原因：{$failInfo}<br />";
                            }
                        }else {
                            $notice_detail = '';
                        }

                    }
                    $params['notice_detail'] = $notice_detail;
                    $ret = \DB::connection('mysql_notice')->table('t_notice')->insert($params);
                    $insertResult = $ret and $insertResult ;
                }//第一层foreach

                if ($insertResult) {
                    return response()->json(['code'=>0,'msg'=>'模板推送通知入表成功']);
                }else {
                    return response()->json(['code'=>-2,'msg'=>'模板推送通知入表失败']);
                }

            }else {//不存在模板推送内容
                return response()->json(['code'=>-3,'msg'=>'模板推送通知内容为空']);
            }




        }else{
            return response()->json(['code'=>-1,'msg'=>'内网请求有误']);
        }






    }

}