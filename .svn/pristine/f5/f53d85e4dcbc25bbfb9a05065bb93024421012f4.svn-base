<?php
//tests
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2016/9/26 0026
 * Time: 下午 2:47
 */

namespace App\Http\Controllers;


use Illuminate\Http\Request;
use App\Http\Controllers\View;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Input;
use App\Http\Controllers\Tools\Utils;
use App\Http\Controllers\Tools\AppUtils;


class ChannelAdminController extends Controller
{
    private $request;
    private $app_id;
    private $domain_name;

    public function __construct(Request $request)
    {
        $this->request = $request;
        $this->app_id = AppUtils::getAppID();
        $this->domain_name = "";
    }

    //渠道分发
    public function channelAdmin(){

        $channel_attr = Input::get('channel_attr', '');
        $resource_type = Input::get('resource_type','');
        if ($resource_type == 'all' || $resource_type == ''){
            $resource_type_arr = [0,1,2,3,4];
            $channel_type_arr = [0,1];
        } else if($resource_type == 8) {
            $channel_type = 1;
            $channel_type_arr = [1];
            $resource_type_arr=[0];
        } else {
            $channel_type = 0;
            $channel_type_arr = [0];
            $resource_type_arr = [$resource_type];
        }

        $search_content = Input::get('search_content', '');
        $orderView = Input::get('order_view', '');
        $orderBy = 'created_at';//默认改为创建时间
        $orderSort = 'desc';
        switch ($orderView) {
            case 1:
                $orderBy = 'created_at';
                break;
            case 2:
                $orderBy = 'view_count';
                break;
            case 3:
                $orderBy = 'open_count';
                break;
            case 10:
                $orderBy = 'created_at'; $orderSort = 'asc';
                break;
            case 20:
                $orderBy = 'view_count'; $orderSort = 'asc';
                break;
            case 30:
                $orderBy = 'open_count'; $orderSort = 'asc';
                break;
        }

        if(empty($search_content)){
                $channels = \DB::table('t_channels')
                    ->select(\DB::raw('*,t_channels.id as channelId'))
                    ->where('app_id','=',$this->app_id)
                    ->whereIn('channel_type',$channel_type_arr)
                    ->whereIn('resource_type',$resource_type_arr)
//                  ->where('generate_type','=',0)
                    ->groupby('t_channels.id')
                    ->orderby($orderBy, $orderSort)
                    ->orderby('id','desc')
                    ->paginate(10);
                if($resource_type == 'all' || $resource_type == '')
                    $sum_count = \DB::select("select sum(view_count) as sumView, sum(open_count) as sumOpen from t_channels where  app_id = '$this->app_id' ")[0];
                else if($resource_type == 8)
                    $sum_count = \DB::select("select sum(view_count) as sumView, sum(open_count) as sumOpen from t_channels where  channel_type = '$channel_type' and app_id = '$this->app_id'  ")[0];
                else
                    $sum_count = \DB::select("select sum(view_count) as sumView, sum(open_count) as sumOpen from t_channels where  channel_type = '$channel_type' and app_id = '$this->app_id' and resource_type = '$resource_type' ")[0];

        }else{
                $channels = \DB::table('t_channels')
                    ->select(\DB::raw('*,t_channels.id as channelId'))
                    ->where('app_id','=',$this->app_id)
                    ->whereIn('channel_type',$channel_type_arr)
                    ->whereIn('resource_type',$resource_type_arr)
//                  ->where('generate_type','=',0)
                    ->where($channel_attr,'like','%'.$search_content.'%')
                    ->groupby('t_channels.id')
                    ->orderby($orderBy, $orderSort)
                    ->orderby('id','desc')
                    ->paginate(10);
                if($resource_type == 'all' || $resource_type == '')
                    $sum_count = \DB::select("select sum(view_count) as sumView, sum(open_count) as sumOpen from t_channels where  app_id = '$this->app_id' and $channel_attr like '%$search_content%' ")[0];
                else if($resource_type == 8)
                    $sum_count = \DB::select("select sum(view_count) as sumView, sum(open_count) as sumOpen from t_channels where  channel_type = '$channel_type' and  app_id = '$this->app_id' and $channel_attr like '%$search_content%' ")[0];
                else
                    $sum_count = \DB::select("select sum(view_count) as sumView, sum(open_count) as sumOpen from t_channels where  channel_type = '$channel_type' and app_id = '$this->app_id' and resource_type = '$resource_type' and $channel_attr like '%$search_content%' ")[0];
        }
//        //获取到渠道的id
//        $cId = array();
//        foreach ($channels as $value){
//            $cId[] = $value->channelId;
//        }
//        //通过id去获取对应渠道开通的数量
//        $channelCount = array();
//        foreach ($cId as $key=>$cid){
//            $temp = \DB::select("select count(*) as count from t_purchase where channel_id = '$cid'");
//            //dump($temp);
//            $channelCount[$key] = $temp[0]->count;
//        }

        $sumView = '0';
        $sumOpen = '0';
        if($sum_count){
            $sumView = $sum_count->sumView;
            $sumOpen = $sum_count->sumOpen;
        }
        //查询所有的包
        $package_list = $this->getAllPackages();

        $image_text_list = $this->getAllResource(1);
        $audio_list = $this->getAllResource(2);
        $video_list = $this->getAllResource(3);
        $alive_list = $this->getAllResource(4);

        //查询渠道来源
        if(count($channels) > 0){
            foreach ($channels as $key=>$channel){

                if($channel->generate_type == 0){
                    $channel->generate_type = "自主创建";
                }else if($channel->generate_type == 1){

                    //去分销申请表中根据渠道id去查询申请人信息
                    $applier = \DB::table('t_sales')
                        ->where('channel_id','=',$channel->id)
                        ->first();
                    if($applier){
                        $channel->generate_type = $applier->applier;
                    }
                }
                $channels[$key] = $channel;
            }
        }


//        dump($image_text_list);
//        dump("----");
//        dump($audio_list);
//        dump("----");
//        dump($video_list);

        return view('admin.channelAdmin', compact('channels','resource_type','channelCount','package_list','image_text_list','audio_list','video_list','alive_list','channel_attr','search_content','orderView','sumView','sumOpen'));

    }

    //查询所有的专栏
    public function getAllPackages()
    {
        //查询所有的包
        $package_list = \DB::table('t_pay_products')
            ->where('app_id','=',AppUtils::getAppID())
            ->orderby('created_at','desc')
            ->get();
        return $package_list;
    }

    //查询所有的资源  type=1,2,3,4 对应图文、音频、视频 、直播
    public function getAllResource($type){
        switch ($type){
            case 1:

                // 更改自kevin
                $image_text_list = \DB::table('t_image_text')->where('display_state','=','0')
                        //取出payment为2或3的记录
                    ->where('app_id','=',AppUtils::getAppID())
                    ->where('payment_type','>','1')
                    ->orderby('created_at','desc')
                    ->get();
                for ($i = 0; $i < sizeof($image_text_list); $i++) {
                    //如果记录中的payment为2
                    if ($image_text_list[$i]->payment_type == 2) {
                        //查找表t_pro_res_relation中relation_state为0对应的product_id
                        $res_product_id = \DB::table('t_pro_res_relation')
                                ->where(['app_id' => AppUtils::getAppID(), 'resource_type' => '1', 'resource_id' => $image_text_list[$i]->id])
                                ->where('relation_state','=','0')
                                ->pluck('product_id');
                        //如果$res_product_id的值不存在，则删除$image_text_list中对应的记录
                        if (!$res_product_id) {
                           unset($image_text_list[$i]);
                        }
                        else{
                            $image_text_list[$i]->product_id=$res_product_id[0];
                        }
                    }
                }

                return $image_text_list;
                break;
            case 2:
                $audio_list = \DB::table('t_audio')
                    ->where('app_id','=',AppUtils::getAppID())->where('audio_state','=','0')
                    ->where('payment_type','>','1')
                    ->orderby('created_at','desc')
                    ->get();
                for ($i = 0; $i < sizeof($audio_list); $i++) {
                    //如果记录中的payment为2
                    if ($audio_list[$i]->payment_type == 2) {
                        //查找表t_pro_res_relation中relation_state为0对应的product_id
                        $res_product_id = \DB::table('t_pro_res_relation')
                                ->where(['app_id' => AppUtils::getAppID(), 'resource_type' => '2', 'resource_id' => $audio_list[$i]->id])
                                ->where('relation_state','=','0')
                                ->pluck('product_id');
                        //如果$res_product_id的值不存在，则删除$image_text_list中对应的记录
                        if (!$res_product_id) {
                            unset($audio_list[$i]);
                        }else{
                            $audio_list[$i]->product_id=$res_product_id[0];
                        }
                    }
                }
                return $audio_list;
                break;
            case 3:
                $video_list = \DB::table('t_video')
                    ->where('app_id','=',AppUtils::getAppID())->where('video_state','=','0')
                    ->where('payment_type','>','1')
                    ->orderby('created_at','desc')
                    ->get();
                for ($i = 0; $i < sizeof($video_list); $i++) {
                    //如果记录中的payment为2
                    if ($video_list[$i]->payment_type == 2) {
                        //查找表t_pro_res_relation中relation_state为0对应的product_id
                        $res_product_id = \DB::table('t_pro_res_relation')
                                ->where(['app_id' => AppUtils::getAppID(), 'resource_type' => '3', 'resource_id' => $video_list[$i]->id])
                                ->where('relation_state','=','0')
                                ->pluck('product_id');
                        //如果$res_product_id的值不存在，则删除$image_text_list中对应的记录
                        if (!$res_product_id) {
                            unset($video_list[$i]);
                        }else{
                            $video_list[$i]->product_id=$res_product_id[0];
                        }
                    }
                }
                return $video_list;
                break;
            case 4:
                $alive_list = \DB::table('t_alive')
                    ->where('app_id','=',AppUtils::getAppID())->where('state','=','0')
                    ->where('payment_type','>','1')
                    ->orderby('created_at','desc')
                    ->get();
                for ($i = 0; $i < sizeof($alive_list); $i++) {
                    //如果记录中的payment为2
                    if ($alive_list[$i]->payment_type == 2) {
                        //查找表t_pro_res_relation中relation_state为0对应的product_id
                        $res_product_id = \DB::table('t_pro_res_relation')
                                ->where(['app_id' => AppUtils::getAppID(), 'resource_type' => '4', 'resource_id' => $alive_list[$i]->id])
                                ->where('relation_state','=','0')
                                ->pluck('product_id');
                        //如果$res_product_id的值不存在，则删除$image_text_list中对应的记录
                        if (!$res_product_id) {
                            $alive_list[$i]->product_id='';
                        }else{
                            $alive_list[$i]->product_id=$res_product_id[0];
                        }
                    }
                }
                return $alive_list;
                break;
        }
    }

    public function submitChannel()
    {
        $wx_id_result = \DB::connection("mysql_config")->select("select wx_app_id,use_collection from t_app_conf where app_id = '$this->app_id' and wx_app_type = 1");
        $wx_id = $wx_id_result[0]->wx_app_id;
        $use_collection = $wx_id_result[0]->use_collection;


        if(Utils::isEmptyString($wx_id) && $use_collection != 1)
        {
            return response()->json(['code' => 2, 'msg' => '添加失败，请先完成公众号接入！']);
        }
        $channel_name = $_POST['channel_name'];
        $payment_type = $_POST['payment_type'];
        $resource_type = $_POST['resource_type'];
        $resource_id = $_POST['resource_id'];
        $product_id = $_POST['package_id'];
        $channel_type = $_POST['channel_type'];
        $resource_title = $_POST['resource_title'];

        $page_type = $payment_type;


        if($payment_type == 2 ){
            if($product_id != ''){
                $payment_type = 3;//付费产品包
            }
        }

        //获取当前时间
        $current_time = Utils::getTime();

        $sql_array = array('app_id' => $this->app_id,'name' => $channel_name,'channel_type' => $channel_type,'payment_type'=>$payment_type,
            'resource_type'=>$resource_type,'resource_id'=>$resource_id,'resource_title'=>$resource_title,'product_id'=>$product_id,
            'created_at' => $current_time, 'updated_at' => $current_time);

        try {

            DB::beginTransaction();
            //保存数据库
            $channel_id = \DB::table('t_channels')->insertGetId(
                $sql_array
            );

//            $MaxId = \DB::select("select max(id) as id from t_channels where id = '$channel_id'");



            if($channel_type == 1){ //渠道类型为首页
                if($use_collection == 1)//个人版 
                {
                    $channel_url = AppUtils::getUrlHeader($this->app_id).env("DOMAIN_DUAN_NAME")."/".$this->app_id.'/homepage/'.Utils::contentUrlHome($channel_id);
                }else {
                    $channel_url = AppUtils::getUrlHeader($this->app_id).$wx_id.".".env("DOMAIN_NAME").'/homepage/'.Utils::contentUrlHome($channel_id);
                }
            }else{
                if($use_collection == 1)//个人版
                {
                    $channel_url = AppUtils::getUrlHeader($this->app_id).env("DOMAIN_DUAN_NAME").Utils::contentUrl($channel_id,$page_type , $resource_type , $resource_id , $product_id,$this->app_id);
                }else {
                    $channel_url = AppUtils::getUrlHeader($this->app_id).$wx_id.".".env("DOMAIN_NAME").Utils::contentUrl($channel_id,$page_type , $resource_type , $resource_id , $product_id,$this->app_id);
                }
            }

            $updateResult = \DB::table('t_channels')
                ->where('app_id', $this->app_id)
                ->where('id',$channel_id)
                ->update(['acc_url' => $channel_url]);
            if($updateResult && !empty($channel_url)){
                DB::commit();
                return response()->json(['code' => 0, 'msg' => '添加成功']);
            }else{
                DB::rollback();
                Utils::logFrom("channel_id=".$channel_id." ".print_r($sql_array, 1), "submitChannel.log");
                return response()->json(['code' => 2, 'msg' => '添加失败，请联系技术小哥！']);
            }


        } catch (\Exception $e) {
            $message = $e->getMessage();
            Utils::logFrom($message, "submitChannel.log");
            if (strstr($message, "Duplicate entry")) {
                return response()->json(['code' => 1, 'msg' => '该渠道名已存在，请修改渠道名后再提交！']);
            }else{
                return response()->json(['code' => 2, 'msg' => '出问题啦，请联系技术小哥！']);
            }
        }

    }

}