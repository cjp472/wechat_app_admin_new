<?php

namespace App\Http\Controllers;

use App\Http\Controllers\Tools\AppUtils;
use App\Http\Controllers\Tools\Utils;
use Illuminate\Http\Request;

use App\Http\Requests;
use Illuminate\Support\Facades\DB;

class DashBoardController extends Controller
{
    const User_Growth = "user";
    const Active_Growth = "active";
    const Income_Growth = "income";

    private $app_id;

    //
    private $request;

    public function __construct(Request $request)
    {
        $this->request = $request;
        $this->app_id = AppUtils::getAppIdByOpenId(AppUtils::getOpenId());
//        Utils::log($this->app_id);
    }

    //兼容无中间库记录数据处理
    public function getnullDayData($day_data,$appid)
    {
        $tempData = "";
        $temp_array = array(
            date('Y-m-d'),
            date('Y-m-d', strtotime("-1 day")),
            date('Y-m-d', strtotime("-7 day")),
            date('Y-m-d', strtotime("-30 day")),
        );

        foreach ($temp_array as $array) {
            $isMatch = false;
            foreach ($day_data as $item) {
                if ($item->date == $array) {
                    $isMatch = true;
                    $tempData[] = ['date' => $array, 'dayCount' => $item->dayCount, 'sumCount' => $item->sumCount, 'dayPrice' => $item->dayPrice, 'sumPrice' => $item->sumPrice];
                }
            }
            if (!$isMatch) {
                $temp = DB::connection('mysql')->select("
select sum(add_count) as dayCount, sum(sum_count) as sumCount, sum(income) as dayPrice, sum(sum_income) as sumPrice from db_ex_stat.t_dash_stat
where app_id = '$appid' and date =  $array ")[0];
                if($temp){
                    $tempData[] = ['date' => $array, 'dayCount' => $temp->dayCount, 'sumCount' => $temp->sumCount, 'dayPrice' => $temp->dayPrice, 'sumPrice' => $temp->sumPrice];
                }else{
                    //appid对应的天新增用户
                    $add_count = DB::connection("mysql")->select("
        select count(*) as value from t_users
        where app_id = '$appid' and date(created_at) = $array ")[0];
                    //appid对应的当天总用户
                    $sum_count =DB::connection("mysql")->select("
            select count(*) as value from t_users
            where app_id = '$appid'  and date(created_at) = $array ")[0];
                    //appid对应的天新增收入
                    $income = DB::connection("mysql")->select("
        select sum(price) as value from t_purchase
        where app_id = '$appid' and date(created_at) = $array   and generate_type = 0 ")[0];
                    //appid对应总收入
                    $sum_income = DB::connection("mysql")->select("
            select sum(price) as value from t_purchase
            where app_id = '$appid' and date(created_at) = $array   and generate_type = 0 ")[0];
                    $add_count = $add_count->value? $add_count->value : 0;
                    $sum_count = $sum_count->value? $sum_count->value : 0;
                    $income = $income->value? $income->value : 0;
                    $sum_income = $sum_income->value? $sum_income->value : 0;
                    $tempData[] = ['date' => $array, 'dayCount' => $add_count, 'sumCount' => $sum_count, 'dayPrice' => $income, 'sumPrice' => $sum_income];
                }
            }
        }

        $tempData = json_decode(json_encode($tempData));
        return $tempData;
    }


    public function dashboard()
    {

        if ($this->app_id == env('TEST_APP_ID')) {
            return $this->testDash();
        }


        $data = DB::connection('mysql_stat')->select("
select date, app_id, case when dayCount is not null then dayCount else 0 end as dayCount, case when sumCount is not null then sumCount else 0 end as sumCount, case when dayPrice is not null then dayPrice else 0 end as dayPrice, case when sumPrice is not null then sumPrice else 0 end as sumPrice
from
(
select date,'$this->app_id' as app_id, sum(add_count) as dayCount, max(sum_count) as sumCount, sum(income) as dayPrice ,max(sum_income) as sumPrice from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 0 day)
) t1
UNION all
select date, app_id, case when dayCount is not null then dayCount else 0 end as dayCount, case when sumCount is not null then sumCount else 0 end as sumCount, case when dayPrice is not null then dayPrice else 0 end as dayPrice, case when sumPrice is not null then sumPrice else 0 end as sumPrice
from
(
select date,'$this->app_id' as app_id, add_count as dayCount, sum_count as sumCount, income as dayPrice ,sum_income as sumPrice from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 1 day)
) t1
UNION ALL
select date, app_id, case when dayCount is not null then dayCount else 0 end as dayCount, case when sumCount is not null then sumCount else 0 end as sumCount, case when dayPrice is not null then dayPrice else 0 end as dayPrice, case when sumPrice is not null then sumPrice else 0 end as sumPrice
from
(
select date,'$this->app_id' as app_id, add_count as dayCount, sum_count as sumCount, income as dayPrice ,sum_income as sumPrice from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 7 day)
) t1
UNION ALL
select date, app_id, case when dayCount is not null then dayCount else 0 end as dayCount, case when sumCount is not null then sumCount else 0 end as sumCount, case when dayPrice is not null then dayPrice else 0 end as dayPrice, case when sumPrice is not null then sumPrice else 0 end as sumPrice
from
(
select date,'$this->app_id' as app_id, add_count as dayCount, sum_count as sumCount, income as dayPrice ,sum_income as sumPrice from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 30 day)
) t1
");
        if(count($data)<4) $data = self::getnullDayData($data,$this->app_id);
        //日活跃用户
        $active_data = DB::connection('mysql_stat')->select("
select (case when active_count then active_count else 0 end) as active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 0 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when active_count then active_count else 0 end) as active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 1 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when active_count then active_count else 0 end) as active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 7 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when active_count then active_count else 0 end) as active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 30 day)
) t1
on t0.app_id = t1.app_id
        ");
        $active_data = self::deal_null_data($active_data,'active_count');
        //日活跃付费用户
        $paid_active_data = DB::connection('mysql_stat')->select("
select (case when paid_active_count then paid_active_count else 0 end) as paid_active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, paid_active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 0 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when paid_active_count then paid_active_count else 0 end) as paid_active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, paid_active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 1 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when paid_active_count then paid_active_count else 0 end) as paid_active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, paid_active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 7 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when paid_active_count then paid_active_count else 0 end) as paid_active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, paid_active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 30 day)
) t1
on t0.app_id = t1.app_id
        ");
        $paid_active_data = self::deal_null_data($paid_active_data,'paid_active_count');
        //日付费用户
        $day_pay_data = DB::connection('mysql_stat')->select("
select (case when pay_count then pay_count else 0 end) as dayPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, pay_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 0 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when pay_count then pay_count else 0 end) as dayPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, pay_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 1 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when pay_count then pay_count else 0 end) as dayPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, pay_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 7 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when pay_count then pay_count else 0 end) as dayPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, pay_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 30 day)
) t1
on t0.app_id = t1.app_id
        ");
        $day_pay_data = self::deal_null_data($day_pay_data,'dayPay');
        //总付费用户
        $sum_pay_data = DB::connection('mysql_stat')->select("
select (case when sumpay then sumpay else 0 end) as sumPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, sum_pay as sumpay
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 0 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when sumpay then sumpay else 0 end) as sumPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, sum_pay as sumpay
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 1 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when sumpay then sumpay else 0 end) as sumPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, sum_pay as sumpay
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 7 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when sumpay then sumpay else 0 end) as sumPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, sum_pay as sumpay
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 30 day)
) t1
on t0.app_id = t1.app_id
        ");
        $sum_pay_data = self::deal_null_data($sum_pay_data,'sumPay');
        return view('admin.dashboard', compact('data', 'active_data', 'paid_active_data', 'day_pay_data', 'sum_pay_data', 'result'));
    }

    //兼容无中间库记录数据处理
    public function getZeroDayData($day_data,$appid,$keyer)
    {
        $tempData = "";
        $temp_array = array(
            date('Y-m-d'),
            date('Y-m-d', strtotime("-1 day")),
            date('Y-m-d', strtotime("-7 day")),
            date('Y-m-d', strtotime("-30 day")),
        );
        $temp_keyer = array(
            'active_count' => 'active_count',
            'paid_active_count' => 'paid_active_count',
            'dayPay' => 'pay_count',
            'sumPay' => 'sum_pay'
        );

        foreach ($temp_array as $array) {
            $isMatch = false;
            foreach ($day_data as $item) {
                if ($item->date == $array) {
                    $isMatch = true;
                    $tempData[] = ['date' => $array, "$keyer" => $item->{$keyer}];
                }
            }
            if (!$isMatch) {
                $temp = DB::connection('mysql')->select("
select sum($temp_keyer[$keyer]) as $keyer from db_ex_stat.t_dash_stat
where app_id = '$appid' and date =  $array ")[0];
                if($temp){
                    $tempData[] = ['date' => $array, "$keyer" => $temp->{$keyer}];
                }else{
                    //直接统计相关数据
                    if($keyer == 'active_count'){
                        $table_date = date('Y_m_d', strtotime($array));
                        $logs_table = 't_api_logs_'.$table_date;
                        //检测分表是否存在
                        $table_created = DB::connection("mysql_log")->select("show tables like '$logs_table'");
                        $logs_table = $table_created? $logs_table : 't_api_logs'; //改为查询旧表
                        //appid对应的天活跃用户
                        $active_count = DB::connection("mysql_log")->select("
        select count(distinct(user_id)) as value from $logs_table
          where app_id = '$appid' and  date(created_at) = $array ")[0];
                        $count = $active_count->value? $active_count->value : 0;
                    }
                    if($keyer == 'paid_active_count'){
                        $table_date = date('Y_m_d', strtotime($array));
                        $logs_table = 't_api_logs_'.$table_date;
                        //检测分表是否存在
                        $table_created = DB::connection("mysql_log")->select("show tables like '$logs_table'");
                        $logs_table = $table_created? $logs_table : 't_api_logs'; //改为查询旧表
                        //统计当天活跃付费用户数据
                        $paidactive_count = DB::connection('mysql')->select("
select count(distinct(user_id)) as value from t_purchase where user_id in (
                select distinct(user_id) as user_id from db_ex_logs.$logs_table
              where app_id ='$appid' and  date(created_at) = '$array'
) and app_id='$appid' and  date(created_at) <= '$array' ")[0];
                        $count = $paidactive_count->value? $paidactive_count->value : 0;
                    }
                    if($keyer == 'pay_count'){
                        //统计当天付费用户数据
                        $pay_count = DB::connection('mysql')->select("
select count(distinct(user_id)) as value from t_purchase where app_id='$appid' and  date(created_at) = '$array' ")[0];
                        $count = $pay_count->value? $pay_count->value : 0;
                    }
                    if($keyer == 'sum_pay'){
                        //appid对应的总付费用户
                        $sum_pay =DB::connection("mysql")->select("
            select count(DISTINCT user_id) as value from t_purchase
            where app_id ='$appid' and created_at <= '$array' ")[0];
                        $count = $sum_pay->value? $sum_pay->value : 0;
                    }

                    $tempData[] = ['date' => $array, "$keyer" => "$count"];
                }
            }
        }

        $tempData = json_decode(json_encode($tempData));
        return $tempData;
    }


    /**
     * 获取增长趋势
     * @param Request $request
     * @return string
     */
    public function getGrowthTrend(Request $request)
    {

        if ($this->app_id == env('TEST_APP_ID')) {
            return $this->getTestGrowth($request);
        }

        $type = $request->input('type');
        $day = $request->input('day', 0);

        if (empty($type)) {
            return "param is missing";
        }

        $trendData = "";

        switch ($type) {
            case DashBoardController::User_Growth:
                if ($day <= 1 && $day >= 0) {
                    //今日新增用户
                    $trendData0 = DB::connection('mysql_stat')->select("
select app_id, date, hour, add_count as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [0]);

                    //昨日新增用户
                    $trendData1 = DB::connection('mysql_stat')->select("
select app_id, date, hour, add_count as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [1]);

                    //今日新增付费用户
                    $trendData2 = DB::connection('mysql_stat')->select("
select app_id, date, hour, pay_count as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [0]);

                    //昨日新增付费用户
                    $trendData3 = DB::connection('mysql_stat')->select("
select app_id, date, hour, pay_count as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [1]);


                    $trendData[0] = $this->getHourEveryday($trendData0);
                    $trendData[1] = $this->getHourEveryday($trendData1);
                    $trendData[2] = $this->getHourEveryday($trendData2);
                    $trendData[3] = $this->getHourEveryday($trendData3);

                } else if ($day == 7 || $day == 30) {
                    //新增用户
                    $trendData0 = DB::connection('mysql_stat')->select("
select date, sum(add_count) as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date between date_sub(curdate(), interval ? day) and date_sub(curdate(), interval 0 day)
group by date
", [$day]);
                    //付费用户
                    $trendData1 = DB::connection('mysql_stat')->select("
select date, pay_count as value from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date between date_sub(curdate(), interval ? day) and date_sub(curdate(), interval 0 day)
group by date
", [$day]);

                    $trendData[0] = $this->getDayEveryday($trendData0, $day);
                    $trendData[1] = $this->getDayEveryday($trendData1, $day);
                }

                break;
            case DashBoardController::Active_Growth:
                if ($day <= 1 && $day >= 0) {
                    $trendData0 = DB::connection('mysql_stat')->select("
select app_id, date, hour, active_count as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [0]);

                    $trendData1 = DB::connection('mysql_stat')->select("
select app_id, date, hour, active_count as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [1]);

                    $trendData2 = DB::connection('mysql_stat')->select("
select app_id, date, hour, paid_active_count as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [0]);

                    $trendData3 = DB::connection('mysql_stat')->select("
select app_id, date, hour, paid_active_count as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [1]);

                    $trendData[0] = $this->getHourEveryday($trendData0);
                    $trendData[1] = $this->getHourEveryday($trendData1);
                    $trendData[2] = $this->getHourEveryday($trendData2);
                    $trendData[3] = $this->getHourEveryday($trendData3);

                } else if ($day == 7 || $day == 30) {
//                    $trendData = DB::connection('mysql_stat')->select("
//select date, sum(active_count) as value from db_ex_stat.t_dash_stat
//where app_id = '$this->app_id'
//and date between date_sub(curdate(), interval ? day) and date_sub(curdate(), interval 1 day)
//group by date
//", [$day]);
                    //活跃用户
                    $trendData0 = DB::connection('mysql_stat')->select("
select date, active_count as value from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date between date_sub(curdate(), interval ? day) and date_sub(curdate(), interval 0 day)
group by date
", [$day]);
                    //活跃付费用户
                    $trendData1 = DB::connection('mysql_stat')->select("
select date, paid_active_count as value from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date between date_sub(curdate(), interval ? day) and date_sub(curdate(), interval 0 day)
group by date
", [$day]);

                    $trendData[0] = $this->getDayEveryday($trendData0, $day);
                    $trendData[1] = $this->getDayEveryday($trendData1, $day);
                }

                break;
            case DashBoardController::Income_Growth:
                if ($day <= 1 && $day >= 0) {
                    $trendData0 = DB::connection('mysql_stat')->select("
select app_id, date, hour, income as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [0]);

                    $trendData1 = DB::connection('mysql_stat')->select("
select app_id, date, hour, income as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [1]);

                    $trendData[0] = $this->getHourEveryday($trendData0);
                    $trendData[1] = $this->getHourEveryday($trendData1);
                } else if ($day == 7 || $day == 30) {
                    //新增收入
                    $trendData = DB::connection('mysql_stat')->select("
select date, sum(income) as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date between date_sub(curdate(), interval ? day) and date_sub(curdate(), interval 0 day)
group by date
", [$day]);

                    $trendData = $this->getDayEveryday($trendData, $day);
                }

                break;
        }
//        if (count($trendData) > 0) {
//            $trendData = $trendData[0];
//        }

        return json_encode($trendData);
    }

    public function getHourEveryday($trendData)
    {
        $tempData = "";
        for ($index = 0; $index < 24; $index++) {
            $isMatch = false;
            foreach ($trendData as $item) {
                if ($item->hour == $index) {
                    $isMatch = true;
                    $tempData[] = ['date' => $index, 'value' => $item->value];
                }
            }
            if (!$isMatch) {
                $tempData[] = ['date' => $index, 'value' => 0];
            }
        }

        return $tempData;
    }

    public function getDayEveryday($trendData, $day)
    {
        $tempData = "";

        $today = date('Y-m-d', time());

        for ($index = $day; $index >= 0; $index--) {
            $isMatch = false;
            $date = date("Y-m-d", strtotime("$today -$index days"));
            foreach ($trendData as $item) {
                if ($item->date == $date) {
                    $tempData[] = ['date' => $date, 'value' => $item->value];
                    $isMatch = true;
                }
            }

            if (!$isMatch) {
                $tempData[] = ['date' => $date, 'value' => 0];
            }
        }

        return $tempData;
    }

    public function getDayData($day_data)
    {
        $tempData = "";
        $temp_array = array(
            date('Y-m-d'),
            date('Y-m-d', strtotime("-1 day")),
            date('Y-m-d', strtotime("-7 day")),
            date('Y-m-d', strtotime("-30 day")),
        );

        foreach ($temp_array as $array) {
            $isMatch = false;
            foreach ($day_data as $item) {
                if ($item->date == $array) {
                    $isMatch = true;
                    $tempData[] = ['date' => $array, 'dayCount' => $item->dayCount, 'sumCount' => $item->sumCount, 'dayPrice' => $item->dayPrice, 'sumPrice' => $item->sumPrice];
                }
            }
            if (!$isMatch) {
                $temp = DB::connection('mysql')->select("
select date, sum(add_count) as dayCount, sum(sum_count) as sumCount, sum(income) as dayPrice, sum(sum_income) as sumPrice from db_ex_stat.t_dash_stat_daycount
where date =  date_sub(curdate(), interval 0 day)")[0];
                $tempData[] = ['date' => $array, 'dayCount' => $temp->dayCount, 'sumCount' => $temp->sumCount, 'dayPrice' => $temp->dayPrice, 'sumPrice' => $temp->sumPrice];
            }
        }

        $tempData = json_decode(json_encode($tempData));
        return $tempData;
    }
    /**
     * 仪表盘
     */
    public function testDash()
    {
        $this->app_id = 'appe0MEs6qX8480';

        $per = 88;

        $data = DB::connection('mysql_stat')->select("
select date, app_id, case when dayCount is not null then dayCount*$per else 0 end as dayCount, case when sumCount is not null then sumCount*$per else 0 end as sumCount, case when dayPrice is not null then dayPrice*$per else 0 end as dayPrice, case when sumPrice is not null then sumPrice*$per else 0 end as sumPrice
from
(
select date,'$this->app_id' as app_id, sum(add_count) as dayCount, max(sum_count) as sumCount, sum(income) as dayPrice ,max(sum_income) as sumPrice from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 0 day)
) t1
UNION all
select date, app_id, case when dayCount is not null then dayCount*$per else 0 end as dayCount, case when sumCount is not null then sumCount*$per else 0 end as sumCount, case when dayPrice is not null then dayPrice*$per else 0 end as dayPrice, case when sumPrice is not null then sumPrice*$per else 0 end as sumPrice
from
(
select date,'$this->app_id' as app_id, add_count as dayCount, sum_count as sumCount, income as dayPrice ,sum_income as sumPrice from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 1 day)
) t1
UNION ALL
select date, app_id, case when dayCount is not null then dayCount*$per else 0 end as dayCount, case when sumCount is not null then sumCount*$per else 0 end as sumCount, case when dayPrice is not null then dayPrice*$per else 0 end as dayPrice, case when sumPrice is not null then sumPrice*$per else 0 end as sumPrice
from
(
select date,'$this->app_id' as app_id, add_count as dayCount, sum_count as sumCount, income as dayPrice ,sum_income as sumPrice from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 7 day)
) t1
UNION ALL
select date, app_id, case when dayCount is not null then dayCount*$per else 0 end as dayCount, case when sumCount is not null then sumCount*$per else 0 end as sumCount, case when dayPrice is not null then dayPrice*$per else 0 end as dayPrice, case when sumPrice is not null then sumPrice*$per else 0 end as sumPrice
from
(
select date,'$this->app_id' as app_id, add_count as dayCount, sum_count as sumCount, income as dayPrice ,sum_income as sumPrice from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 30 day)
) t1
");
        if(count($data)<4) $data = self::getnullDayData($data,$this->app_id);
        //日活跃用户
        $active_data = DB::connection('mysql_stat')->select("
select (case when active_count then active_count*$per else 0 end) as active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 0 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when active_count then active_count*$per else 0 end) as active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 1 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when active_count then active_count*$per else 0 end) as active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 7 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when active_count then active_count*$per else 0 end) as active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 30 day)
) t1
on t0.app_id = t1.app_id
        ");
        $active_data = self::deal_null_data($active_data,'active_count');
        //日活跃付费用户
        $paid_active_data = DB::connection('mysql_stat')->select("
select (case when paid_active_count then paid_active_count*$per else 0 end) as paid_active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, paid_active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 0 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when paid_active_count then paid_active_count*$per else 0 end) as paid_active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, paid_active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 1 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when paid_active_count then paid_active_count*$per else 0 end) as paid_active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, paid_active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 7 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when paid_active_count then paid_active_count*$per else 0 end) as paid_active_count from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, paid_active_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 30 day)
) t1
on t0.app_id = t1.app_id
        ");
        $paid_active_data = self::deal_null_data($paid_active_data,'paid_active_count');
        //日付费用户
        $day_pay_data = DB::connection('mysql_stat')->select("
select (case when pay_count then pay_count*$per else 0 end) as dayPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, pay_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 0 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when pay_count then pay_count*$per else 0 end) as dayPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, pay_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 1 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when pay_count then pay_count*$per else 0 end) as dayPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, pay_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 7 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when pay_count then pay_count*$per else 0 end) as dayPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, pay_count
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 30 day)
) t1
on t0.app_id = t1.app_id
        ");
        $day_pay_data = self::deal_null_data($day_pay_data,'dayPay');
        //总付费用户
        $sum_pay_data = DB::connection('mysql_stat')->select("
select (case when sumpay then sumpay*$per else 0 end) as sumPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, sum_pay as sumpay
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 0 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when sumpay then sumpay*$per else 0 end) as sumPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, sum_pay as sumpay
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 1 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when sumpay then sumpay*$per else 0 end) as sumPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, sum_pay as sumpay
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 7 day)
) t1
on t0.app_id = t1.app_id

UNION ALL

select (case when sumpay then sumpay*$per else 0 end) as sumPay from
(
select '$this->app_id' as app_id
) t0
left join
(
select app_id, sum_pay as sumpay
from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date = date_sub(curdate(), interval 30 day)
) t1
on t0.app_id = t1.app_id
        ");
        $sum_pay_data = self::deal_null_data($sum_pay_data,'sumPay');
        return view('admin.dashboard', compact('data', 'active_data', 'paid_active_data', 'day_pay_data', 'sum_pay_data', 'result'));
    }

    //补空
    public function deal_null_data($queryData,$keyer)
    {
        $tempData = "";
            foreach ($queryData as $temp) {
                if ($temp->{$keyer} == null || $temp->{$keyer} == '') {
                    $temp->{$keyer} = '0';
                }
                $tempData[] = $temp;
            }
        return $tempData;
    }

    public function getIncomeEveryday($day_pay_data)
    {
        $tempData = "";
        $temp_array = array(
            date('Y-m-d'),
            date('Y-m-d', strtotime("-1 day")),
            date('Y-m-d', strtotime("-7 day")),
            date('Y-m-d', strtotime("-30 day")),
        );

        foreach ($temp_array as $array) {
            $isMatch = false;
            foreach ($day_pay_data as $item) {
                if ($item->date == $array) {
                    $isMatch = true;
                    $tempData[] = ['date' => $array, 'dayPay' => $item->dayPay];
                }
            }
            if (!$isMatch) {
                $tempData[] = ['date' => $array, 'dayPay' => 0];
            }
        }

        $tempData = json_decode(json_encode($tempData));
        return $tempData;
    }

    /**
     * 获取体验账号的趋势数据
     * @param Request $request
     * @return string
     */
    public function getTestGrowth(Request $request)
    {
        $day = $request->input('day', 0);
        $type = $request->input('type');

        if ($this->app_id == env('TEST_APP_ID')) {
            $this->app_id = 'appe0MEs6qX8480';
            $per = 88;

            if (empty($type)) {
                return "param is missing";
            }

            $trendData = "";

            switch ($type) {
                case DashBoardController::User_Growth:
                    if ($day <= 1 && $day >= 0) {
                        //今日新增用户
                        $trendData0 = DB::connection('mysql_stat')->select("
select app_id, date, hour, add_count*$per as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [0]);

                        //昨日新增用户
                        $trendData1 = DB::connection('mysql_stat')->select("
select app_id, date, hour, add_count*$per as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [1]);

                        //今日新增付费用户
                        $trendData2 = DB::connection('mysql_stat')->select("
select app_id, date, hour, pay_count*$per as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [0]);

                        //昨日新增付费用户
                        $trendData3 = DB::connection('mysql_stat')->select("
select app_id, date, hour, pay_count*$per as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [1]);


                        $trendData[0] = $this->getHourEveryday($trendData0);
                        $trendData[1] = $this->getHourEveryday($trendData1);
                        $trendData[2] = $this->getHourEveryday($trendData2);
                        $trendData[3] = $this->getHourEveryday($trendData3);

                    } else if ($day == 7 || $day == 30) {
                        //新增用户
                        $trendData0 = DB::connection('mysql_stat')->select("
select date, sum(add_count)*$per as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date between date_sub(curdate(), interval ? day) and date_sub(curdate(), interval 0 day)
group by date
", [$day]);
                        //付费用户
                        $trendData1 = DB::connection('mysql_stat')->select("
select date, pay_count*$per as value from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date between date_sub(curdate(), interval ? day) and date_sub(curdate(), interval 0 day)
group by date
", [$day]);

                        $trendData[0] = $this->getDayEveryday($trendData0, $day);
                        $trendData[1] = $this->getDayEveryday($trendData1, $day);
                    }

                    break;
                case DashBoardController::Active_Growth:
                    if ($day <= 1 && $day >= 0) {
                        $trendData0 = DB::connection('mysql_stat')->select("
select app_id, date, hour, active_count*$per as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [0]);

                        $trendData1 = DB::connection('mysql_stat')->select("
select app_id, date, hour, active_count*$per as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [1]);

                        $trendData2 = DB::connection('mysql_stat')->select("
select app_id, date, hour, paid_active_count*$per as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [0]);

                        $trendData3 = DB::connection('mysql_stat')->select("
select app_id, date, hour, paid_active_count*$per as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [1]);

                        $trendData[0] = $this->getHourEveryday($trendData0);
                        $trendData[1] = $this->getHourEveryday($trendData1);
                        $trendData[2] = $this->getHourEveryday($trendData2);
                        $trendData[3] = $this->getHourEveryday($trendData3);

                    } else if ($day == 7 || $day == 30) {
//                    $trendData = DB::connection('mysql_stat')->select("
//select date, sum(active_count) as value from db_ex_stat.t_dash_stat
//where app_id = '$this->app_id'
//and date between date_sub(curdate(), interval ? day) and date_sub(curdate(), interval 1 day)
//group by date
//", [$day]);
                        //活跃用户
                        $trendData0 = DB::connection('mysql_stat')->select("
select date, active_count*$per as value from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date between date_sub(curdate(), interval ? day) and date_sub(curdate(), interval 0 day)
group by date
", [$day]);
                        //活跃付费用户
                        $trendData1 = DB::connection('mysql_stat')->select("
select date, paid_active_count*$per as value from db_ex_stat.t_dash_stat_daycount
where app_id = '$this->app_id'
and date between date_sub(curdate(), interval ? day) and date_sub(curdate(), interval 0 day)
group by date
", [$day]);

                        $trendData[0] = $this->getDayEveryday($trendData0, $day);
                        $trendData[1] = $this->getDayEveryday($trendData1, $day);
                    }

                    break;
                case DashBoardController::Income_Growth:
                    if ($day <= 1 && $day >= 0) {
                        $trendData0 = DB::connection('mysql_stat')->select("
select app_id, date, hour, income*$per as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [0]);

                        $trendData1 = DB::connection('mysql_stat')->select("
select app_id, date, hour, income*$per as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date = date_sub(curdate(), INTERVAL ? DAY)
", [1]);

                        $trendData[0] = $this->getHourEveryday($trendData0);
                        $trendData[1] = $this->getHourEveryday($trendData1);
                    } else if ($day == 7 || $day == 30) {
                        //新增收入
                        $trendData = DB::connection('mysql_stat')->select("
select date, sum(income)*$per as value from db_ex_stat.t_dash_stat
where app_id = '$this->app_id'
and date between date_sub(curdate(), interval ? day) and date_sub(curdate(), interval 0 day)
group by date
", [$day]);

                        $trendData = $this->getDayEveryday($trendData, $day);
                    }

                    break;
            }
//        if (count($trendData) > 0) {
//            $trendData = $trendData[0];
//        }

            return json_encode($trendData);
        }
    }
}
