$(document).ready(function(){QADetail.init()});var resAudio1Length=-1,resAudioSize=-1;var QADetail=function(){var e={};e.tabState="questionList";e.pageIndex=1;e.searchAnswererContent="";e.searchAnswererState="";e.searchQuestionContent="";e.timeInterval={startDate:"",endDate:""};e.init=function(){var a=GetQueryString("set");if(a=="answerer")location.href="/QA/questionAndAnswerDetail?page_type=1";var i=GetQueryString("page_type");if(i==1){e.tabState="responderList"}else{e.tabState="questionList"}var n=$("#admin_data").data("code_url");t(n);modal.handleSearch();modal.initDetailOperate();modal.initContentTab();modal.initListPagination();modal.initPaginationEvent();modal.initQuestionOperate();modal.initResponderOperate();modal.initSettingOperate();modal.handleInviteAnswererWindow();modal.handleScanQuestionWindow()};function t(e){var t=new QRCode(document.getElementById("qr_code"),{text:e,width:120,height:120,colorDark:"#000000",colorLight:"#ffffff",correctLevel:QRCode.CorrectLevel.H});create_qr_flag=false}return e}();var modal=function(){var e={};e.questionId=-1;e.submitLimit=false;e.isAudioUploading=false;e.initDetailOperate=function(){$(".detailOperateArea li.operate").click(function(){var e=$(this).data("type");var t=$(this).data("state")==1?0:1;var a=$("#product_id").val();switch(e){case"editQA":window.location.href="/QA/editQuestionAndAnswer?id="+a;break;case"changeQAState":$.ajax("/QA/changeStateQueProducts",{type:"POST",dataType:"json",data:{id:a,state:t},success:function(e){if(e.code==0){if(t==1){baseUtils.show.blueTip("已下架，问答专区将不在首页显示")}else{baseUtils.show.blueTip("已上架，问答专区将在首页显示")}window.location.href="/QA/questionAndAnswerDetail"}else{baseUtils.show.redTip("网络错误，请稍后再试！")}},error:function(e,t,a){console.log(a);baseUtils.show.redTip("网络错误，请稍后再试！")}});break;default:console.log("参数错误.");break}});(function(){var e=new Clipboard(".QA_DetailUrl");e.on("success",function(e){baseUtils.show.blueTip("复制成功！请在微信内打开哦 。");e.clearSelection()})})()};e.initContentTab=function(){$(".contentTabWrapper li").click(function(){var t=$(this).val();if(!$(this).hasClass("activeContentTab")){if(t==1){$("#responderTab").addClass("activeContentTab");$("#questionTab").removeClass("activeContentTab");$("#settingTab").removeClass("activeContentTab")}else if(t==0){$("#questionTab").addClass("activeContentTab");$("#responderTab").removeClass("activeContentTab");$("#settingTab").removeClass("activeContentTab")}else if(t==2){$("#settingTab").addClass("activeContentTab");$("#questionTab").removeClass("activeContentTab");$("#responderTab").removeClass("activeContentTab")}}QADetail.pageIndex=1;QADetail.searchAnswererContent="";QADetail.searchAnswererState="";QADetail.searchQuestionContent="";$("#searchAnswererInput").val("");$("#answererIsShow").val("");$("#searchQuestionInput").val("");$("#SelectData").text("全部问题");if(t==1){QADetail.tabState="responderList";history.replaceState(null,"","/QA/questionAndAnswerDetail?page_type=1");e.getResponderList(true,true)}else if(t==0){QADetail.tabState="questionList";history.replaceState(null,"","/QA/questionAndAnswerDetail?page_type=0");e.getQuestionList(true,true)}else if(t==2){QADetail.tabState="settingTab";history.replaceState(null,"","/QA/questionAndAnswerDetail?page_type=2");e.getSettingPage()}})};e.getResponderList=function(t,a){if(t==undefined||t==true){$(".loadingS").fadeIn(300)}$.ajax("/QA/getResponderList",{type:"GET",dataType:"html",data:{search:QADetail.searchAnswererContent,state:QADetail.searchAnswererState,page:QADetail.pageIndex},success:function(t){$(".loadingS").fadeOut(100);if(t&&t.length>0){$(".mainListContent").html(t);e.initListPagination();if(a){$(".listOperateArea").show();$(".questionListOperate").hide();$(".responderListOperate").fadeIn(300)}}else{console.log("请求数据为空");baseUtils.show.redTip("网络问题，请稍后再试")}},error:function(e,t,a){$(".loadingS").fadeOut(100);console.log(a);baseUtils.show.redTip("网络错误，请稍后再试！")}})};e.getQuestionList=function(t,a){if(t==undefined||t==true){$(".loadingS").fadeIn(300)}var i=$("#SelectData").text();if(i=="全部问题"){i=""}$.ajax("/QA/getQuestionList",{type:"GET",dataType:"html",data:{search:QADetail.searchQuestionContent,time1:i,page:QADetail.pageIndex},success:function(t){$(".loadingS").fadeOut(100);if(t&&t.length>0){$(".mainListContent").html(t);e.initListPagination();if(a){$(".listOperateArea").show();$(".responderListOperate").hide();$(".questionListOperate").fadeIn(300)}}else{console.log("请求数据为空");baseUtils.show.redTip("网络问题，请稍后再试")}},error:function(e,t,a){$(".loadingS").fadeOut(100);console.log(a);baseUtils.show.redTip("网络错误，请稍后再试！")}})};e.getSettingPage=function(){$(".loadingS").fadeIn(300);$.ajax("/QA/getSettingPage",{type:"GET",dataType:"html",data:{},success:function(e){$(".loadingS").fadeOut(100);if(e&&e.length>0){$(".mainListContent").html(e);$(".listOperateArea").hide()}else{console.log("请求数据为空");baseUtils.show.redTip("网络问题，请稍后再试")}},error:function(e,t,a){$(".loadingS").fadeOut(100);console.log(a);baseUtils.show.redTip("服务器出小差了，请稍后再试！")}})};e.initQuestionOperate=function(){$(".mainListContent").on("click",".questionListOperateArea li.operate",function(){var t=$(this).data("id");var a=$(this).data("state")==1?0:1;var i=$(this).data("type");switch(i){case"answerQuestion":e.handAnswerQuestion(t);break;case"answerQueAgain":$.alert("确认上传音频并重新回答，确认后新的回答内容将覆盖原内容，且该动作无法撤回。","info",{btn:3,onOk:function(){e.handAnswerQuestion(t)}});break;case"lookQuestion":$("#scanQueWindowContent").text("");$("#scanQueImgWrapper").html("");var n=$(this).data("content");$("#scanQueWindowContent").text(n);var o=$(this).data("imgs");if(o.length>0){var s="";o.forEach(function(e){s+='<img src="'+e+'">'});$("#scanQueImgWrapper").html(s)}$(".scanQuestionWindowBg").fadeIn(300);break;case"changeQuestionState":$(".loadingS").fadeIn(300);$.ajax("/QA/changeQuestionState",{type:"POST",dataType:"json",data:{state:a,question_id:t},success:function(t){if(t.code==0){if(a==1){baseUtils.show.blueTip("操作成功，问题将不在问答专区展示")}else{baseUtils.show.blueTip("操作成功，问题将在问答专区展示")}e.getQuestionList(false)}else{$(".loadingS").fadeOut(100);baseUtils.show.redTip("网络错误，请稍后再试！")}},error:function(e,t,a){$(".loadingS").fadeOut(100);console.log(a);baseUtils.show.redTip("网络错误，请稍后再试！")}});break;default:console.log("参数错误.");break}});$("#selectAudioFile").click(function(){$("#uploadAudioFile").click()});$(".closeUploadFileWindow, #cancelUploadAudio").click(function(){$(".uploadFileWindowBg").fadeOut(300)});$("#uploadAudioFile").on("change",function(){o(this.files,"audio","Audio1",1e3)});$("#confirmUploadAudio").click(function(){var t=$("#uploadAudioUrl").val();if(e.isAudioUploading){baseUtils.show.redTip("音频文件正在上传中...");return false}if(t.length==0){baseUtils.show.redTip("请先上传音频文件.");return false}if(e.submitLimit){console.log("音频提交中，请稍后再试。");return false}e.submitLimit=true;$.ajax("/QA/commitAnswer",{type:"POST",dataType:"json",data:{id:e.questionId,answerer_size:resAudioSize,answerer_length:resAudio1Length,answerer_content:t},success:function(t){e.submitLimit=false;if(t.code==0){baseUtils.show.blueTip("音频文件提交成功。");$(".uploadFileWindowBg").fadeOut(300);e.getQuestionList(true)}else{baseUtils.show.redTip(t.msg);console.log(t.msg)}},error:function(t,a,i){e.submitLimit=false;console.log(i);baseUtils.show.redTip("服务器出小差了，请稍后再试！")}})})};e.initResponderOperate=function(){$(".mainListContent").on("click",".responderListOperateArea li.operate",function(){var t=$(this).data("state");var a=$(this).data("id");var i=$(this).data("type");switch(i){case"editResponderInfo":window.location.href="/QA/editAnswerer?answerer_id="+a+"&state="+t;break;case"changeResponderState":$(".loadingS").fadeIn(300);t=t==1?0:1;$.ajax("/QA/changeAnswererState",{type:"POST",dataType:"json",data:{answerer_id:a,state:t},success:function(a){if(a.code==0){if(t==1){baseUtils.show.blueTip("答主下线成功")}else{baseUtils.show.blueTip("答主上线成功")}e.getResponderList(false)}else if(a.code==2){$(".loadingS").fadeOut(100);baseUtils.show.redTip("请您先填写答主信息 才能上线答主！");return false}else{$(".loadingS").fadeOut(100);baseUtils.show.redTip("网络错误，请稍后再试！");return false}},error:function(e,t,a){$(".loadingS").fadeOut(100);console.log(a);baseUtils.show.redTip("网络错误，请稍后再试！")}});break;default:console.log("参数错误.");break}})};e.initSettingOperate=function(){$(".mainListContent").on("change","input[type=radio]",function(e){var t=e.target.id,a=$("input[name=isShowListen]:checked").val(),i=$("input[name=isSmsRemind]:checked").val();$.ajax("/QA/commitSetting",{type:"POST",dataType:"json",data:{params:{isShowListen:a,isSmsRemind:i}},success:function(e){if(e.code==0){var a="";switch(t){case"openEavesdrop":a="问题页已显示偷听人数";break;case"closeEavesdrop":a="问题页已隐藏偷听人数";break;case"openSmsRemind":a="短信提醒已开启";break;case"closeSmsRemind":a="短信提醒已关闭";break;default:console.log("参数错误。");break}baseUtils.show.blueTip(a)}else{baseUtils.show.redTip("保存失败");window.location.reload()}},error:function(e,t,a){console.log(a);baseUtils.show.redTip("服务器出小差了，请稍后再试！")}})})};e.handleInviteAnswererWindow=function(){$("#inviteResponder").click(function(){$(".scanQrCodeWindowBg").fadeIn(300)});$(".closeScanQrCodeWindow img").click(function(){$(".scanQrCodeWindowBg").fadeOut(300)});(function(){var e=new Clipboard(".copyHref");e.on("success",function(e){baseUtils.show.blueTip("复制成功！请在微信内打开哦 。");e.clearSelection();setTimeout(function(){$(".scanQrCodeWindowBg").fadeOut(100)},2e3)})})()};e.handleScanQuestionWindow=function(){$(".closeQuestionDetailWindow, .scanQuestionWindowBg").click(function(){$(".scanQuestionWindowBg").fadeOut(100)});$(".scanQuestionWindow").click(function(e){e.stopPropagation()})};e.initListPagination=function(){$(".list-page .pagination li a").each(function(){var e=$(this);e.attr("data-url",e.attr("href"));e.removeAttr("href")})};e.initPaginationEvent=function(){$(".mainListContent").on("click"," .pagination li a",function(t){var a=$(t.target),i=a.data("url");var n=i.indexOf("page");QADetail.pageIndex=i.substring(n+5);if(QADetail.tabState=="questionList"){e.getQuestionList(true)}else if(QADetail.tabState=="responderList"){e.getResponderList(true)}})};e.handleSearch=function(){var a=new pickerDateRange("SelectData",{isTodayValid:true,defaultText:" ~ ",inputTrigger:"optional",theme:"ta",success:function(e){t(e);$("#searchQuestion").click()}});$("#SelectRange").on("click","li",function(){var e=$(this).data("type");var a=-1;switch(e){case"all":a={startDate:"",endDate:""};break;case"current_month":a={startDate:getNowMonth(),endDate:getNowDay()};break;case"last_seven":a={startDate:getOneDay(6),endDate:getNowDay()};break;case"last_month":a={startDate:getOneDay(29),endDate:getNowDay()};break}t(a);$("#searchQuestion").click()});$("#optional").click(function(){$("#dropdown-toggle").dropdown("toggle")});$("#SelectData").off("click").text("全部问题");$("#searchQuestion").click(function(){QADetail.pageIndex=1;QADetail.searchQuestionContent=$("#searchQuestionInput").val();e.getQuestionList(true)});$("#searchQuestionInput").on("keypress",function(e){if(e.keyCode==13){$("#searchQuestion").click()}});$("#searchAnswerer").click(function(){QADetail.pageIndex=1;QADetail.searchAnswererContent=$("#searchAnswererInput").val();QADetail.searchAnswererState=$("#answererIsShow").val();e.getResponderList(true)});$("#answererIsShow").on("change",function(){$("#searchAnswerer").click()});$("#searchAnswererInput").on("keypress",function(e){if(e.keyCode==13){$("#searchAnswerer").click()}})};e.handAnswerQuestion=function(t){$(".uploadAudio1Name").html("");$(".uploadAudio1Size span").html("");$(".uploadPLineActiveAudio1").css("width","0");$(".uploadPersentAudio1").text("");$(".uploadPLineAudio1").hide();$(".uploadBoxAudio1").hide();$("#uploadAudioUrl").val("");e.questionId=t;$(".uploadFileWindowBg").fadeIn(100)};function t(e){if(e.startDate==""&&e.endDate==""){$("#SelectData").text("全部问题")}else{$("#SelectData").text(e.startDate+" ~ "+e.endDate)}QADetail.timeInterval.startDate=e.startDate;QADetail.timeInterval.endDate=e.endDate}function a(e){var t=$(".contentTabWrapper>li.activeContentTab").val();if(t==1&&e=="responderTab"||t==0&&e=="questionTab"){return false}if(e=="questionTab"){$("#questionTab").addClass("activeContentTab");$("#responderTab").removeClass("activeContentTab")}else if(e=="responderTab"){$("#responderTab").addClass("activeContentTab");$("#questionTab").removeClass("activeContentTab")}}function i(e){var t=null;if(window.createObjectURL!=undefined){t=window.createObjectURL(e)}else if(window.URL!=undefined){t=window.URL.createObjectURL(e)}else if(window.webkitURL!=undefined){t=window.webkitURL.createObjectURL(e)}return t}function n(e){if(window.revokeObjectURL!=undefined){window.revokeObjectURL(e)}else if(window.URL!=undefined){window.URL.revokeObjectURL(e)}else if(window.webkitURL!=undefined){window.webkitURL.revokeObjectURL(e)}}function o(t,a,o,s){if(t&&t.length>0){var r=t[0];var l=i(r);var d=(r.size/(1024*1024)).toFixed(2);resAudioSize=d;if(o=="Audio1"){fileAudio1Size=d;var c=document.getElementById("resourceTime");c.src=l;c.onload=function(){n(l)}}if(a=="audio"){console.log($("#audioURL"+o));$("#audioURL"+o).hide();$(".uploadBox"+o).fadeIn(300);$(".upload"+o+"Name").html(r.name);$(".upload"+o+"Size span").html(d);$(".uploadPLine"+o).show().find(".uploadPLineActive"+o).css("width","0");$(".uploadPersent"+o).html("");if(o=="Audio1"){var u=r.name}}if($uploadFile.checkFileSize(r,s)){e.isAudioUploading=true;$uploadFile.uploadRes(r,a,function(e){if(a=="audio"){var t=parseInt(e*100);$(".uploadPLineActive"+o).css("width",t+"%");$(".uploadPersent"+o).text(t+"%")}},function(t){e.isAudioUploading=false;console.log(t);baseUtils.show.blueTip("上传成功！");$(".uploadPersent"+o).text("已上传");var a=t.data.access_url;$("#uploadAudioUrl").val(a)},function(t){e.isAudioUploading=false;console.error("上传失败!!!");console.log(t);baseUtils.show.redTip("上传失败！")})}else{baseUtils.show.redTip("上传资源限制在"+s+"MB内！");$(".upLoad"+o).val("")}}else{baseUtils.show.redTip("网络错误，请稍后再试！")}}return e}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
