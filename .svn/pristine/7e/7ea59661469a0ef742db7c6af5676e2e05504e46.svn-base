$(function(){init()});function init(){e();n();o();function e(){var e=GetQueryString("version_type");try{var n=new WxLogin({id:"change_qrCode",appid:qrcode_app_id,scope:"snsapi_login",redirect_uri:encodeURI(new_redirect_url+"?version_type="+e),state:"",style:"black",href:qrcode_href});console.log(new_redirect_url+"?version_type="+e)}catch(e){console.log(e)}}function n(){var e=GetQueryString("type");var n=GetQueryString("wx_is_used");var o=GetQueryString("scan_error");console.log(e);if(e==1){$("#step_2").hide()}else if(e==2){$("#itemTwo").addClass("finStep");$(".qrCode").hide();$("#step_2").show();$("#step_3").hide()}else if(e==3){$("#itemTwo").addClass("finStep");$("#itemThree").addClass("finStep");$(".qrCode").hide();$("#step_2").hide();$("#step_3").show();t()}if(n==1){$("#hasBind").show()}}function o(){var e;var n=1;var o=0;var i;var s;function r(){var e=60;n=0;var o=setInterval(function(){if(e>0){$(".getCodeBtn").text(e+"秒");e--}else{$(".getCodeBtn").removeClass("preventClickBtn");$(".getCodeBtn").addClass("btnBlue");$(".getCodeBtn").text("再次获取");n=1;clearInterval(o)}},1e3)}$("#phone").keyup(function(){i=$("#phone").val();if(!$formCheck.checkPhone(i)){$("#phone").addClass("borderRed");$("#phoneBox").show()}else{$("#phone").removeClass("borderRed");$("#phoneBox").hide()}});$(".getCodeBtn").click(function(){i=$("#phone").val();if($formCheck.checkPhone(i)){console.log(i);if(n){$(".getCodeBtn").removeClass("btnBlue");$(this).addClass("preventClickBtn");r();$.get("/sendmsg",{phone:i},function(e){if(e.ret==0){}else{}})}}else{baseUtils.show.redTip("请输入正确的手机号")}});$(".identifyCodeInput").keyup(function(){e=$(".identifyCodeInput").val();if(e.length==0){$(".successTip,.errorTip").show();$(".identifyCodeInput").removeClass("borderRed");return}$.get("/identify",{phoneInIdentify:i,code:e},function(e){if(e.ret==0){$(".successTip").show();$(".errorTip").hide();$(".identifyCodeInput").removeClass("borderRed");o=1}else{$(".successTip").hide();$(".errorTip").show();$(".identifyCodeInput").addClass("borderRed");o=0}})});$("#save").on("click",function(){s=$("#linkman").val();i=$("#phone").val();if(o==1){$.ajax("/admin/changePhone",{type:"POST",data:{phone:i,contacts:s},success:function(e){console.log(e);if(e.code==0){$(".identifyCodeInput").val("");$("#itemTwo").addClass("finStep");$("#itemThree").addClass("finStep");$(".qrCode").hide();$("#step_2").hide();$("#step_3").show();t()}else{baseUtils.show.redTip(e.msg)}},error:function(e,n,o){console.log(e);console.error(o);console.error(n);baseUtils.show.redTip("网络错误，请稍后再试！")}})}else{baseUtils.show.redTip("请输入验证码")}})}function t(){var e=2;var n=setInterval(function(){if(e>=0){$(".secondJump").text(e);e--}else{o();clearInterval(n)}},1e3);$("#jumpNow").click(function(){o()});function o(){$.get("/loginout",function(e){var n=e.ret;if(n=="0"){window.location="/login"}else{baseUtils.show.redTip("错误");return}})}}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
