<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/7/31
 * Time: 11:35
 */

namespace App\Http\Controllers\Community;

use App\Http\Controllers\Controller;
use App\Http\Controllers\Tools\AppUtils;
use App\Http\Controllers\Tools\StringConstants;
use App\Http\Controllers\Tools\Utils;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Input;
use Mockery\Matcher\Ducktype;

class ExerciseController extends Controller {

    public function exerciseBookList() {

        $search_content = Input::get("search_content", "");
        $exercise_book_list = $this->getExerciseBookList($search_content);

        return View("admin.exercise.exerciseBookList", compact("exercise_book_list", "search_content"));

    }

    public function createExerciseBook() {

        $page_type = 0;
        $community_list = $this->getCommunityList();

        return View("admin.exercise.manageExerciseBook", compact("page_type","community_list"));

    }

    public function editExerciseBook() {

        $exercise_book_id = Input::get('exercise_book_id');
        $page_type = 1;
        $app_id = AppUtils::getAppID();
        $exercise_book_info = $this->getExerciseBookInfo($app_id,$exercise_book_id);
        if($exercise_book_info){

            $resource_list = $this->getResourceList($exercise_book_info->resource_type);
        }else{
            Utils::logFrom('该作业本不存在;exercise_book_id:'.$exercise_book_id,'fhw_error_exercise_system.log');
        }

        $community_list = $this->getCommunityList();


        return View("admin.exercise.manageExerciseBook", compact("exercise_book_info", "page_type","resource_list","community_list"));

    }

    /**
     * 函数名:uploadExerciseBook
     * 参数:
     *      1-title（作业本名称）
     *      2-resource_id（关联的课程id）
     *      3-resource_type(资源类型；1-图文；2-音频；3-视频；4-直播；5-专栏)
     *      4-resource_name（关联的课程名称）
     *      5-community_id（关联的社群id）
     *      6-is_enable_notify（是否允许老师推送作业提醒开关，0-不允许；1-允许）
     * 作用:创建作业本
     * 作者:keven
     * 时间:2017-07-31 19:45:27
     * 返回值:jason格式（【code   data   msg】）
     */
    public function uploadExerciseBook(){
        $params = Input::get('params');
        $operator_type = StringConstants::EXERCISE_BOOK_ADD;
        $ret = $this->saveExerciseBook($params,$operator_type);

        if($ret == '0'){
            Utils::logFrom("upload resource record successed!",'fhw_exercise.log');
            return Utils::result('新增作业本成功!');
        }else{
            $msg = $ret;
            return response()->json(Utils::pack("0", StringConstants::Code_Failed, $msg));
        }

    }

    /**
     * 函数名:updateExerciseBook
     * 参数:
     *      1-title（作业本名称）
     *      2-resource_id（关联的课程id）
     *      3-resource_type(资源类型；1-图文；2-音频；3-视频；4-直播；5-专栏)
     *      4-resource_name（关联的课程名称）
     *      5-community_id（关联的社群id）
     *      6-is_enable_notify（是否允许老师推送作业提醒开关，0-不允许；1-允许）
     * 作用:更新作业本
     * 作者:keven
     * 时间:2017-07-31 20:10:55
     * 返回值:jason格式（【code   data   msg】）
     */
    public function updateExerciseBook(){
        $params = Input::get('params');
        if(!array_key_exists('exercise_book_id',$params)){
            return response()->json(Utils::pack("0", StringConstants::Code_Failed, '缺少参数:作业本id'));
        }
        $exercise_book_id = $params['exercise_book_id'];
        $app_id = AppUtils::getAppID();
        //查询该作业本的信息
        $exercise_book_info = $this->getExerciseBookInfo($app_id,$exercise_book_id);
        if($exercise_book_info){
            if(!array_key_exists('resource_id',$params)){
                return response()->json(Utils::pack("0", StringConstants::Code_Failed, '缺少参数:关联的课程'));
            }
            if($exercise_book_info->resource_id!=$params['resource_id']){
                //校验该作业本是否已经有人创建了作业,若有则不能变更关联的课程
                $is_has_exercise = $this->isHasExercise($app_id,$exercise_book_id);
                if($is_has_exercise != 0){//有人创建了作业
                    return response()->json(Utils::pack("0", StringConstants::Code_Failed, '作业本已存在作业,不能更改关联的课程'));
                }

            }
        }else{
            return response()->json(Utils::pack("0", StringConstants::Code_Failed, '该作业本不存在'));
        }
        $operator_type = StringConstants::EXERCISE_BOOK_EDIT;
        $ret = $this->saveExerciseBook($params,$operator_type);

        if($ret == '0'){
            Utils::logFrom("update resource record successed!",'fhw_exercise.log');
            return Utils::result('更新作业本成功!');
        }else{
            $msg = $ret;
            return response()->json(Utils::pack("0", StringConstants::Code_Failed, $msg));
        }
    }

    /**
     *函数名:getResourceListByType
     * 参数:
     *      resource_type(资源类型；1-图文；2-音频；3-视频；4-直播；5-专栏)
     * 作用:获取资源列表
     * 作者:keven
     * 时间:2017-07-31 21:56:28
     * 返回值:jason格式（code data msg）
     *       data['resource_list']
     */
    public function getResourceListByType(){
        $resource_type = Input::get('resource_type');
        $resource_list = $this->getResourceList($resource_type);
        $data['resource_list'] = $resource_list;
        return Utils::result($data);
    }

    //查询社群列表
    private function getCommunityList(){
        $community_list = \DB::table('db_ex_business.t_community')
            ->select('id','title')
            ->where('app_id','=',AppUtils::getAppID())
            ->where('community_state','=',0)
            ->get();
        return $community_list;
    }

    //查询资源列表
    private function getResourceList($resource_type){
        if($resource_type <1 && $resource_type >5){
            return '类型错误';
        }
        $table_name_array = [
            '1'=>'db_ex_business.t_image_text',
            '2'=>'db_ex_business.t_audio',
            '3'=>'db_ex_business.t_video',
            '4'=>'db_ex_business.t_alive',
            '5'=>'db_ex_business.t_pay_products',
        ];
        $field_name_array = [
            '1'=>'display_state',
            '2'=>'audio_state',
            '3'=>'video_state',
            '4'=>'state',
            '5'=>'state',
        ];
        $file_name = 'title';
        $whereRaw = " 1=1 ";
        if($resource_type == StringConstants::PACKAGE_SINGLE_LIST){
            $whereRaw .=' and is_member = 0';
            $file_name = 'name';
        }

        $resource_list = \DB::table($table_name_array[$resource_type])
            ->select('id',$file_name)
            ->where('app_id','=',AppUtils::getAppID())
            ->where($field_name_array[$resource_type],'=',0)
            ->whereRaw($whereRaw)
            ->get();
        return $resource_list;
    }

    //查询该业务的所有作业本
    private function getExerciseBookList($search_content){
        $whereRaw = '1=1';

        if(!Utils::isEmptyString($search_content)){
            $whereRaw .= " and title like '"."%".$search_content."%'";
        }

        $exercise_books_list = \DB::table('db_ex_business.t_exercise_books')
            ->where('app_id','=',AppUtils::getAppID())
            ->whereRaw($whereRaw)
            ->orderby('created_at', 'desc')
            ->paginate(10);
        return $exercise_books_list;
    }

    //保存作业本信息
    private function saveExerciseBook($params,$operator_type){
        //参数校验
        if(!array_key_exists('title',$params) || Utils::isEmptyString($params['title'])){
            return '作业本名称不能为空';
        }
        if(!array_key_exists('resource_id',$params) || Utils::isEmptyString($params['resource_id'])){
            return '关联的课程不能为空';
        }
        if(!array_key_exists('resource_type',$params) || Utils::isEmptyString($params['resource_type'])){
            return '关联的课程类型不能为空';
        }
        if(!array_key_exists('resource_name',$params) || Utils::isEmptyString($params['resource_name'])){
            return '关联的课程不能为空';
        }

        if($operator_type == StringConstants::EXERCISE_BOOK_ADD){//新增作业本
            $params['created_at'] = Utils::getTime();
            $params['app_id'] = AppUtils::getAppID();
            $params['exercise_book_id'] = Utils::getUniId('e_');
            $ret = \DB::table('db_ex_business.t_exercise_books')->insert($params);
            $msg = '新增作业本成功';
        }else{//更新作业本
            $params['updated_at'] = Utils::getTime();
            $ret = \DB::table('db_ex_business.t_exercise_books')
                ->where('app_id','=',AppUtils::getAppID())
                ->where('exercise_book_id','=',$params['exercise_book_id'])
                ->update($params);
            $msg = "更新作业本失败";
        }

        if($ret){
            return StringConstants::Code_Succeed;
        }else{
            return $msg;
        }

    }

    //校验该作业本是否已经有人创建了作业,若有则不能变更关联的课程
    private function isHasExercise($app_id,$exercise_book_id){
        //在表db_ex_business.t_exercises中查询该作业本下是否有有效的作业记录
        $exercises_count = \DB::table('db_ex_business.t_exercises')
            ->where('app_id','=',$app_id)
            ->where('exercise_book_id','=',$exercise_book_id)
            ->count();
        return $exercises_count;
    }

    //查询作业本的信息
    private function getExerciseBookInfo($app_id,$exercise_book_id){
        //在表db_ex_business.t_exercise_books中查询该作业本信息
        $exercise_info = \DB::table('db_ex_business.t_exercise_books')
            ->where('app_id','=',$app_id)
            ->where('exercise_book_id','=',$exercise_book_id)
            ->first();
        return $exercise_info;
    }
}



















